// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_8u_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [3:0] pool_table_height17_address0;
reg    pool_table_height17_ce0;
wire   [0:0] pool_table_height17_q0;
wire   [3:0] pool_table_width18_address0;
reg    pool_table_width18_ce0;
wire   [0:0] pool_table_width18_q0;
reg    data_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln142_reg_2037;
reg   [0:0] icmp_ln142_reg_2037_pp0_iter1_reg;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln879_reg_2070;
reg   [0:0] icmp_ln879_reg_2070_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [7:0] indvar_flatten_reg_1366;
reg   [3:0] h_idx_assign_reg_1377;
reg   [3:0] wp_idx_reg_1388;
wire   [0:0] icmp_ln142_fu_1399_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    io_acc_block_signal_op160;
wire    data_window_2_V_V_full_n;
reg    data_window_2_V_V_write;
reg   [1:0] or_ln_reg_2066;
wire    data_window_1_V_V_full_n;
reg    data_window_1_V_V_write;
wire    data_window_0_V_V_full_n;
reg    data_window_0_V_V_write;
wire    data_window_3_V_V_full_n;
reg    data_window_3_V_V_write;
wire    data_window_6_V_V_full_n;
reg    data_window_6_V_V_write;
wire    data_window_5_V_V_full_n;
reg    data_window_5_V_V_write;
wire    data_window_4_V_V_full_n;
reg    data_window_4_V_V_write;
wire    data_window_7_V_V_full_n;
reg    data_window_7_V_V_write;
wire    data_window_10_V_V_full_n;
reg    data_window_10_V_V_write;
wire    data_window_9_V_V_full_n;
reg    data_window_9_V_V_write;
wire    data_window_8_V_V_full_n;
reg    data_window_8_V_V_write;
wire    data_window_11_V_V_full_n;
reg    data_window_11_V_V_write;
wire    data_window_14_V_V_full_n;
reg    data_window_14_V_V_write;
wire    data_window_13_V_V_full_n;
reg    data_window_13_V_V_write;
wire    data_window_12_V_V_full_n;
reg    data_window_12_V_V_write;
wire    data_window_15_V_V_full_n;
reg    data_window_15_V_V_write;
wire    data_window_18_V_V_full_n;
reg    data_window_18_V_V_write;
wire    data_window_17_V_V_full_n;
reg    data_window_17_V_V_write;
wire    data_window_16_V_V_full_n;
reg    data_window_16_V_V_write;
wire    data_window_19_V_V_full_n;
reg    data_window_19_V_V_write;
wire    data_window_22_V_V_full_n;
reg    data_window_22_V_V_write;
wire    data_window_21_V_V_full_n;
reg    data_window_21_V_V_write;
wire    data_window_20_V_V_full_n;
reg    data_window_20_V_V_write;
wire    data_window_23_V_V_full_n;
reg    data_window_23_V_V_write;
wire    data_window_26_V_V_full_n;
reg    data_window_26_V_V_write;
wire    data_window_25_V_V_full_n;
reg    data_window_25_V_V_write;
wire    data_window_24_V_V_full_n;
reg    data_window_24_V_V_write;
wire    data_window_27_V_V_full_n;
reg    data_window_27_V_V_write;
wire    data_window_30_V_V_full_n;
reg    data_window_30_V_V_write;
wire    data_window_29_V_V_full_n;
reg    data_window_29_V_V_write;
wire    data_window_28_V_V_full_n;
reg    data_window_28_V_V_write;
wire    data_window_31_V_V_full_n;
reg    data_window_31_V_V_write;
reg    ap_block_state4_pp0_stage0_iter2;
wire   [15:0] data_window_0_V_V_dout;
wire    data_window_0_V_V_empty_n;
reg    data_window_0_V_V_read;
reg   [0:0] icmp_ln879_reg_2070_pp0_iter2_reg;
wire   [15:0] data_window_1_V_V_dout;
wire    data_window_1_V_V_empty_n;
reg    data_window_1_V_V_read;
wire   [15:0] data_window_2_V_V_dout;
wire    data_window_2_V_V_empty_n;
reg    data_window_2_V_V_read;
wire   [15:0] data_window_3_V_V_dout;
wire    data_window_3_V_V_empty_n;
reg    data_window_3_V_V_read;
wire   [15:0] data_window_4_V_V_dout;
wire    data_window_4_V_V_empty_n;
reg    data_window_4_V_V_read;
wire   [15:0] data_window_5_V_V_dout;
wire    data_window_5_V_V_empty_n;
reg    data_window_5_V_V_read;
wire   [15:0] data_window_6_V_V_dout;
wire    data_window_6_V_V_empty_n;
reg    data_window_6_V_V_read;
wire   [15:0] data_window_7_V_V_dout;
wire    data_window_7_V_V_empty_n;
reg    data_window_7_V_V_read;
wire   [15:0] data_window_8_V_V_dout;
wire    data_window_8_V_V_empty_n;
reg    data_window_8_V_V_read;
wire   [15:0] data_window_9_V_V_dout;
wire    data_window_9_V_V_empty_n;
reg    data_window_9_V_V_read;
wire   [15:0] data_window_10_V_V_dout;
wire    data_window_10_V_V_empty_n;
reg    data_window_10_V_V_read;
wire   [15:0] data_window_11_V_V_dout;
wire    data_window_11_V_V_empty_n;
reg    data_window_11_V_V_read;
wire   [15:0] data_window_12_V_V_dout;
wire    data_window_12_V_V_empty_n;
reg    data_window_12_V_V_read;
wire   [15:0] data_window_13_V_V_dout;
wire    data_window_13_V_V_empty_n;
reg    data_window_13_V_V_read;
wire   [15:0] data_window_14_V_V_dout;
wire    data_window_14_V_V_empty_n;
reg    data_window_14_V_V_read;
wire   [15:0] data_window_15_V_V_dout;
wire    data_window_15_V_V_empty_n;
reg    data_window_15_V_V_read;
wire   [15:0] data_window_16_V_V_dout;
wire    data_window_16_V_V_empty_n;
reg    data_window_16_V_V_read;
wire   [15:0] data_window_17_V_V_dout;
wire    data_window_17_V_V_empty_n;
reg    data_window_17_V_V_read;
wire   [15:0] data_window_18_V_V_dout;
wire    data_window_18_V_V_empty_n;
reg    data_window_18_V_V_read;
wire   [15:0] data_window_19_V_V_dout;
wire    data_window_19_V_V_empty_n;
reg    data_window_19_V_V_read;
wire   [15:0] data_window_20_V_V_dout;
wire    data_window_20_V_V_empty_n;
reg    data_window_20_V_V_read;
wire   [15:0] data_window_21_V_V_dout;
wire    data_window_21_V_V_empty_n;
reg    data_window_21_V_V_read;
wire   [15:0] data_window_22_V_V_dout;
wire    data_window_22_V_V_empty_n;
reg    data_window_22_V_V_read;
wire   [15:0] data_window_23_V_V_dout;
wire    data_window_23_V_V_empty_n;
reg    data_window_23_V_V_read;
wire   [15:0] data_window_24_V_V_dout;
wire    data_window_24_V_V_empty_n;
reg    data_window_24_V_V_read;
wire   [15:0] data_window_25_V_V_dout;
wire    data_window_25_V_V_empty_n;
reg    data_window_25_V_V_read;
wire   [15:0] data_window_26_V_V_dout;
wire    data_window_26_V_V_empty_n;
reg    data_window_26_V_V_read;
wire   [15:0] data_window_27_V_V_dout;
wire    data_window_27_V_V_empty_n;
reg    data_window_27_V_V_read;
wire   [15:0] data_window_28_V_V_dout;
wire    data_window_28_V_V_empty_n;
reg    data_window_28_V_V_read;
wire   [15:0] data_window_29_V_V_dout;
wire    data_window_29_V_V_empty_n;
reg    data_window_29_V_V_read;
wire   [15:0] data_window_30_V_V_dout;
wire    data_window_30_V_V_empty_n;
reg    data_window_30_V_V_read;
wire   [15:0] data_window_31_V_V_dout;
wire    data_window_31_V_V_empty_n;
reg    data_window_31_V_V_read;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_enable_reg_pp0_iter3;
wire    io_acc_block_signal_op314;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln142_fu_1405_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln81_1_fu_1431_p3;
reg   [3:0] select_ln81_1_reg_2046;
wire   [3:0] i_iw_fu_1449_p2;
wire   [1:0] or_ln_fu_1455_p3;
wire   [0:0] icmp_ln879_fu_1463_p2;
wire   [15:0] select_ln94_fu_1539_p3;
reg   [15:0] select_ln94_reg_2074;
wire   [15:0] select_ln94_1_fu_1553_p3;
reg   [15:0] select_ln94_1_reg_2080;
wire   [15:0] select_ln94_3_fu_1567_p3;
reg   [15:0] select_ln94_3_reg_2086;
wire   [15:0] select_ln94_4_fu_1581_p3;
reg   [15:0] select_ln94_4_reg_2092;
wire   [15:0] select_ln94_6_fu_1595_p3;
reg   [15:0] select_ln94_6_reg_2098;
wire   [15:0] select_ln94_7_fu_1609_p3;
reg   [15:0] select_ln94_7_reg_2104;
wire   [15:0] select_ln94_9_fu_1623_p3;
reg   [15:0] select_ln94_9_reg_2110;
wire   [15:0] select_ln94_10_fu_1637_p3;
reg   [15:0] select_ln94_10_reg_2116;
wire   [15:0] select_ln94_12_fu_1651_p3;
reg   [15:0] select_ln94_12_reg_2122;
wire   [15:0] select_ln94_13_fu_1665_p3;
reg   [15:0] select_ln94_13_reg_2128;
wire   [15:0] select_ln94_15_fu_1679_p3;
reg   [15:0] select_ln94_15_reg_2134;
wire   [15:0] select_ln94_16_fu_1693_p3;
reg   [15:0] select_ln94_16_reg_2140;
wire   [15:0] select_ln94_18_fu_1707_p3;
reg   [15:0] select_ln94_18_reg_2146;
wire   [15:0] select_ln94_19_fu_1721_p3;
reg   [15:0] select_ln94_19_reg_2152;
wire   [15:0] select_ln94_21_fu_1735_p3;
reg   [15:0] select_ln94_21_reg_2158;
wire   [15:0] select_ln94_22_fu_1749_p3;
reg   [15:0] select_ln94_22_reg_2164;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [3:0] ap_phi_mux_h_idx_assign_phi_fu_1381_p4;
wire   [63:0] zext_ln81_fu_1439_p1;
wire   [63:0] zext_ln89_fu_1444_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln143_fu_1411_p2;
wire   [3:0] add_ln142_1_fu_1425_p2;
wire   [3:0] select_ln81_fu_1417_p3;
wire   [0:0] icmp_ln1496_fu_1533_p2;
wire   [0:0] icmp_ln1496_1_fu_1547_p2;
wire   [0:0] icmp_ln1496_3_fu_1561_p2;
wire   [0:0] icmp_ln1496_4_fu_1575_p2;
wire   [0:0] icmp_ln1496_6_fu_1589_p2;
wire   [0:0] icmp_ln1496_7_fu_1603_p2;
wire   [0:0] icmp_ln1496_9_fu_1617_p2;
wire   [0:0] icmp_ln1496_10_fu_1631_p2;
wire   [0:0] icmp_ln1496_12_fu_1645_p2;
wire   [0:0] icmp_ln1496_13_fu_1659_p2;
wire   [0:0] icmp_ln1496_15_fu_1673_p2;
wire   [0:0] icmp_ln1496_16_fu_1687_p2;
wire   [0:0] icmp_ln1496_18_fu_1701_p2;
wire   [0:0] icmp_ln1496_19_fu_1715_p2;
wire   [0:0] icmp_ln1496_21_fu_1729_p2;
wire   [0:0] icmp_ln1496_22_fu_1743_p2;
wire   [0:0] icmp_ln1496_2_fu_1757_p2;
wire   [0:0] icmp_ln1496_5_fu_1768_p2;
wire   [0:0] icmp_ln1496_8_fu_1779_p2;
wire   [0:0] icmp_ln1496_11_fu_1790_p2;
wire   [0:0] icmp_ln1496_14_fu_1801_p2;
wire   [0:0] icmp_ln1496_17_fu_1812_p2;
wire   [0:0] icmp_ln1496_20_fu_1823_p2;
wire   [0:0] icmp_ln1496_23_fu_1834_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

pooling2d_cl_array_array_ap_fixed_8u_config7_s_pool_tabledEe #(
    .DataWidth( 1 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pool_table_height17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool_table_height17_address0),
    .ce0(pool_table_height17_ce0),
    .q0(pool_table_height17_q0)
);

pooling2d_cl_array_array_ap_fixed_8u_config7_s_pool_tabledEe #(
    .DataWidth( 1 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pool_table_width18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool_table_width18_address0),
    .ce0(pool_table_width18_ce0),
    .q0(pool_table_width18_q0)
);

fifo_w16_d12_A data_window_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_0_V_dout),
    .if_full_n(data_window_0_V_V_full_n),
    .if_write(data_window_0_V_V_write),
    .if_dout(data_window_0_V_V_dout),
    .if_empty_n(data_window_0_V_V_empty_n),
    .if_read(data_window_0_V_V_read)
);

fifo_w16_d12_A data_window_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_0_V_dout),
    .if_full_n(data_window_1_V_V_full_n),
    .if_write(data_window_1_V_V_write),
    .if_dout(data_window_1_V_V_dout),
    .if_empty_n(data_window_1_V_V_empty_n),
    .if_read(data_window_1_V_V_read)
);

fifo_w16_d12_A data_window_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_0_V_dout),
    .if_full_n(data_window_2_V_V_full_n),
    .if_write(data_window_2_V_V_write),
    .if_dout(data_window_2_V_V_dout),
    .if_empty_n(data_window_2_V_V_empty_n),
    .if_read(data_window_2_V_V_read)
);

fifo_w16_d12_A data_window_3_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_0_V_dout),
    .if_full_n(data_window_3_V_V_full_n),
    .if_write(data_window_3_V_V_write),
    .if_dout(data_window_3_V_V_dout),
    .if_empty_n(data_window_3_V_V_empty_n),
    .if_read(data_window_3_V_V_read)
);

fifo_w16_d12_A data_window_4_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_1_V_dout),
    .if_full_n(data_window_4_V_V_full_n),
    .if_write(data_window_4_V_V_write),
    .if_dout(data_window_4_V_V_dout),
    .if_empty_n(data_window_4_V_V_empty_n),
    .if_read(data_window_4_V_V_read)
);

fifo_w16_d12_A data_window_5_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_1_V_dout),
    .if_full_n(data_window_5_V_V_full_n),
    .if_write(data_window_5_V_V_write),
    .if_dout(data_window_5_V_V_dout),
    .if_empty_n(data_window_5_V_V_empty_n),
    .if_read(data_window_5_V_V_read)
);

fifo_w16_d12_A data_window_6_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_1_V_dout),
    .if_full_n(data_window_6_V_V_full_n),
    .if_write(data_window_6_V_V_write),
    .if_dout(data_window_6_V_V_dout),
    .if_empty_n(data_window_6_V_V_empty_n),
    .if_read(data_window_6_V_V_read)
);

fifo_w16_d12_A data_window_7_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_1_V_dout),
    .if_full_n(data_window_7_V_V_full_n),
    .if_write(data_window_7_V_V_write),
    .if_dout(data_window_7_V_V_dout),
    .if_empty_n(data_window_7_V_V_empty_n),
    .if_read(data_window_7_V_V_read)
);

fifo_w16_d12_A data_window_8_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_2_V_dout),
    .if_full_n(data_window_8_V_V_full_n),
    .if_write(data_window_8_V_V_write),
    .if_dout(data_window_8_V_V_dout),
    .if_empty_n(data_window_8_V_V_empty_n),
    .if_read(data_window_8_V_V_read)
);

fifo_w16_d12_A data_window_9_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_2_V_dout),
    .if_full_n(data_window_9_V_V_full_n),
    .if_write(data_window_9_V_V_write),
    .if_dout(data_window_9_V_V_dout),
    .if_empty_n(data_window_9_V_V_empty_n),
    .if_read(data_window_9_V_V_read)
);

fifo_w16_d12_A data_window_10_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_2_V_dout),
    .if_full_n(data_window_10_V_V_full_n),
    .if_write(data_window_10_V_V_write),
    .if_dout(data_window_10_V_V_dout),
    .if_empty_n(data_window_10_V_V_empty_n),
    .if_read(data_window_10_V_V_read)
);

fifo_w16_d12_A data_window_11_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_2_V_dout),
    .if_full_n(data_window_11_V_V_full_n),
    .if_write(data_window_11_V_V_write),
    .if_dout(data_window_11_V_V_dout),
    .if_empty_n(data_window_11_V_V_empty_n),
    .if_read(data_window_11_V_V_read)
);

fifo_w16_d12_A data_window_12_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_3_V_dout),
    .if_full_n(data_window_12_V_V_full_n),
    .if_write(data_window_12_V_V_write),
    .if_dout(data_window_12_V_V_dout),
    .if_empty_n(data_window_12_V_V_empty_n),
    .if_read(data_window_12_V_V_read)
);

fifo_w16_d12_A data_window_13_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_3_V_dout),
    .if_full_n(data_window_13_V_V_full_n),
    .if_write(data_window_13_V_V_write),
    .if_dout(data_window_13_V_V_dout),
    .if_empty_n(data_window_13_V_V_empty_n),
    .if_read(data_window_13_V_V_read)
);

fifo_w16_d12_A data_window_14_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_3_V_dout),
    .if_full_n(data_window_14_V_V_full_n),
    .if_write(data_window_14_V_V_write),
    .if_dout(data_window_14_V_V_dout),
    .if_empty_n(data_window_14_V_V_empty_n),
    .if_read(data_window_14_V_V_read)
);

fifo_w16_d12_A data_window_15_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_3_V_dout),
    .if_full_n(data_window_15_V_V_full_n),
    .if_write(data_window_15_V_V_write),
    .if_dout(data_window_15_V_V_dout),
    .if_empty_n(data_window_15_V_V_empty_n),
    .if_read(data_window_15_V_V_read)
);

fifo_w16_d12_A data_window_16_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_4_V_dout),
    .if_full_n(data_window_16_V_V_full_n),
    .if_write(data_window_16_V_V_write),
    .if_dout(data_window_16_V_V_dout),
    .if_empty_n(data_window_16_V_V_empty_n),
    .if_read(data_window_16_V_V_read)
);

fifo_w16_d12_A data_window_17_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_4_V_dout),
    .if_full_n(data_window_17_V_V_full_n),
    .if_write(data_window_17_V_V_write),
    .if_dout(data_window_17_V_V_dout),
    .if_empty_n(data_window_17_V_V_empty_n),
    .if_read(data_window_17_V_V_read)
);

fifo_w16_d12_A data_window_18_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_4_V_dout),
    .if_full_n(data_window_18_V_V_full_n),
    .if_write(data_window_18_V_V_write),
    .if_dout(data_window_18_V_V_dout),
    .if_empty_n(data_window_18_V_V_empty_n),
    .if_read(data_window_18_V_V_read)
);

fifo_w16_d12_A data_window_19_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_4_V_dout),
    .if_full_n(data_window_19_V_V_full_n),
    .if_write(data_window_19_V_V_write),
    .if_dout(data_window_19_V_V_dout),
    .if_empty_n(data_window_19_V_V_empty_n),
    .if_read(data_window_19_V_V_read)
);

fifo_w16_d12_A data_window_20_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_5_V_dout),
    .if_full_n(data_window_20_V_V_full_n),
    .if_write(data_window_20_V_V_write),
    .if_dout(data_window_20_V_V_dout),
    .if_empty_n(data_window_20_V_V_empty_n),
    .if_read(data_window_20_V_V_read)
);

fifo_w16_d12_A data_window_21_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_5_V_dout),
    .if_full_n(data_window_21_V_V_full_n),
    .if_write(data_window_21_V_V_write),
    .if_dout(data_window_21_V_V_dout),
    .if_empty_n(data_window_21_V_V_empty_n),
    .if_read(data_window_21_V_V_read)
);

fifo_w16_d12_A data_window_22_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_5_V_dout),
    .if_full_n(data_window_22_V_V_full_n),
    .if_write(data_window_22_V_V_write),
    .if_dout(data_window_22_V_V_dout),
    .if_empty_n(data_window_22_V_V_empty_n),
    .if_read(data_window_22_V_V_read)
);

fifo_w16_d12_A data_window_23_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_5_V_dout),
    .if_full_n(data_window_23_V_V_full_n),
    .if_write(data_window_23_V_V_write),
    .if_dout(data_window_23_V_V_dout),
    .if_empty_n(data_window_23_V_V_empty_n),
    .if_read(data_window_23_V_V_read)
);

fifo_w16_d12_A data_window_24_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_6_V_dout),
    .if_full_n(data_window_24_V_V_full_n),
    .if_write(data_window_24_V_V_write),
    .if_dout(data_window_24_V_V_dout),
    .if_empty_n(data_window_24_V_V_empty_n),
    .if_read(data_window_24_V_V_read)
);

fifo_w16_d12_A data_window_25_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_6_V_dout),
    .if_full_n(data_window_25_V_V_full_n),
    .if_write(data_window_25_V_V_write),
    .if_dout(data_window_25_V_V_dout),
    .if_empty_n(data_window_25_V_V_empty_n),
    .if_read(data_window_25_V_V_read)
);

fifo_w16_d12_A data_window_26_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_6_V_dout),
    .if_full_n(data_window_26_V_V_full_n),
    .if_write(data_window_26_V_V_write),
    .if_dout(data_window_26_V_V_dout),
    .if_empty_n(data_window_26_V_V_empty_n),
    .if_read(data_window_26_V_V_read)
);

fifo_w16_d12_A data_window_27_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_6_V_dout),
    .if_full_n(data_window_27_V_V_full_n),
    .if_write(data_window_27_V_V_write),
    .if_dout(data_window_27_V_V_dout),
    .if_empty_n(data_window_27_V_V_empty_n),
    .if_read(data_window_27_V_V_read)
);

fifo_w16_d12_A data_window_28_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_7_V_dout),
    .if_full_n(data_window_28_V_V_full_n),
    .if_write(data_window_28_V_V_write),
    .if_dout(data_window_28_V_V_dout),
    .if_empty_n(data_window_28_V_V_empty_n),
    .if_read(data_window_28_V_V_read)
);

fifo_w16_d12_A data_window_29_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_7_V_dout),
    .if_full_n(data_window_29_V_V_full_n),
    .if_write(data_window_29_V_V_write),
    .if_dout(data_window_29_V_V_dout),
    .if_empty_n(data_window_29_V_V_empty_n),
    .if_read(data_window_29_V_V_read)
);

fifo_w16_d12_A data_window_30_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_7_V_dout),
    .if_full_n(data_window_30_V_V_full_n),
    .if_write(data_window_30_V_V_write),
    .if_dout(data_window_30_V_V_dout),
    .if_empty_n(data_window_30_V_V_empty_n),
    .if_read(data_window_30_V_V_read)
);

fifo_w16_d12_A data_window_31_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_7_V_dout),
    .if_full_n(data_window_31_V_V_full_n),
    .if_write(data_window_31_V_V_write),
    .if_dout(data_window_31_V_V_dout),
    .if_empty_n(data_window_31_V_V_empty_n),
    .if_read(data_window_31_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_reg_2037 == 1'd0))) begin
        h_idx_assign_reg_1377 <= select_ln81_1_reg_2046;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_idx_assign_reg_1377 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_fu_1399_p2 == 1'd0))) begin
        indvar_flatten_reg_1366 <= add_ln142_fu_1405_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1366 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_fu_1399_p2 == 1'd0))) begin
        wp_idx_reg_1388 <= i_iw_fu_1449_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        wp_idx_reg_1388 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln142_reg_2037 <= icmp_ln142_fu_1399_p2;
        icmp_ln142_reg_2037_pp0_iter1_reg <= icmp_ln142_reg_2037;
        icmp_ln879_reg_2070 <= icmp_ln879_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln879_reg_2070_pp0_iter2_reg <= icmp_ln879_reg_2070;
        icmp_ln879_reg_2070_pp0_iter3_reg <= icmp_ln879_reg_2070_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_reg_2037 == 1'd0))) begin
        or_ln_reg_2066 <= or_ln_fu_1455_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_fu_1399_p2 == 1'd0))) begin
        select_ln81_1_reg_2046 <= select_ln81_1_fu_1431_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        select_ln94_10_reg_2116 <= select_ln94_10_fu_1637_p3;
        select_ln94_12_reg_2122 <= select_ln94_12_fu_1651_p3;
        select_ln94_13_reg_2128 <= select_ln94_13_fu_1665_p3;
        select_ln94_15_reg_2134 <= select_ln94_15_fu_1679_p3;
        select_ln94_16_reg_2140 <= select_ln94_16_fu_1693_p3;
        select_ln94_18_reg_2146 <= select_ln94_18_fu_1707_p3;
        select_ln94_19_reg_2152 <= select_ln94_19_fu_1721_p3;
        select_ln94_1_reg_2080 <= select_ln94_1_fu_1553_p3;
        select_ln94_21_reg_2158 <= select_ln94_21_fu_1735_p3;
        select_ln94_22_reg_2164 <= select_ln94_22_fu_1749_p3;
        select_ln94_3_reg_2086 <= select_ln94_3_fu_1567_p3;
        select_ln94_4_reg_2092 <= select_ln94_4_fu_1581_p3;
        select_ln94_6_reg_2098 <= select_ln94_6_fu_1595_p3;
        select_ln94_7_reg_2104 <= select_ln94_7_fu_1609_p3;
        select_ln94_9_reg_2110 <= select_ln94_9_fu_1623_p3;
        select_ln94_reg_2074 <= select_ln94_fu_1539_p3;
    end
end

always @ (*) begin
    if ((icmp_ln142_fu_1399_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_reg_2037 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_h_idx_assign_phi_fu_1381_p4 = select_ln81_1_reg_2046;
    end else begin
        ap_phi_mux_h_idx_assign_phi_fu_1381_p4 = h_idx_assign_reg_1377;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_0_V_V_read = 1'b1;
    end else begin
        data_window_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_0_V_V_write = 1'b1;
    end else begin
        data_window_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_10_V_V_read = 1'b1;
    end else begin
        data_window_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_10_V_V_write = 1'b1;
    end else begin
        data_window_10_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_11_V_V_read = 1'b1;
    end else begin
        data_window_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_11_V_V_write = 1'b1;
    end else begin
        data_window_11_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_12_V_V_read = 1'b1;
    end else begin
        data_window_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_12_V_V_write = 1'b1;
    end else begin
        data_window_12_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_13_V_V_read = 1'b1;
    end else begin
        data_window_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_13_V_V_write = 1'b1;
    end else begin
        data_window_13_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_14_V_V_read = 1'b1;
    end else begin
        data_window_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_14_V_V_write = 1'b1;
    end else begin
        data_window_14_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_15_V_V_read = 1'b1;
    end else begin
        data_window_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_15_V_V_write = 1'b1;
    end else begin
        data_window_15_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_16_V_V_read = 1'b1;
    end else begin
        data_window_16_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_16_V_V_write = 1'b1;
    end else begin
        data_window_16_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_17_V_V_read = 1'b1;
    end else begin
        data_window_17_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_17_V_V_write = 1'b1;
    end else begin
        data_window_17_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_18_V_V_read = 1'b1;
    end else begin
        data_window_18_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_18_V_V_write = 1'b1;
    end else begin
        data_window_18_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_19_V_V_read = 1'b1;
    end else begin
        data_window_19_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_19_V_V_write = 1'b1;
    end else begin
        data_window_19_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_1_V_V_read = 1'b1;
    end else begin
        data_window_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_1_V_V_write = 1'b1;
    end else begin
        data_window_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_20_V_V_read = 1'b1;
    end else begin
        data_window_20_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_20_V_V_write = 1'b1;
    end else begin
        data_window_20_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_21_V_V_read = 1'b1;
    end else begin
        data_window_21_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_21_V_V_write = 1'b1;
    end else begin
        data_window_21_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_22_V_V_read = 1'b1;
    end else begin
        data_window_22_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_22_V_V_write = 1'b1;
    end else begin
        data_window_22_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_23_V_V_read = 1'b1;
    end else begin
        data_window_23_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_23_V_V_write = 1'b1;
    end else begin
        data_window_23_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_24_V_V_read = 1'b1;
    end else begin
        data_window_24_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_24_V_V_write = 1'b1;
    end else begin
        data_window_24_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_25_V_V_read = 1'b1;
    end else begin
        data_window_25_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_25_V_V_write = 1'b1;
    end else begin
        data_window_25_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_26_V_V_read = 1'b1;
    end else begin
        data_window_26_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_26_V_V_write = 1'b1;
    end else begin
        data_window_26_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_27_V_V_read = 1'b1;
    end else begin
        data_window_27_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_27_V_V_write = 1'b1;
    end else begin
        data_window_27_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_28_V_V_read = 1'b1;
    end else begin
        data_window_28_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_28_V_V_write = 1'b1;
    end else begin
        data_window_28_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_29_V_V_read = 1'b1;
    end else begin
        data_window_29_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_29_V_V_write = 1'b1;
    end else begin
        data_window_29_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_2_V_V_read = 1'b1;
    end else begin
        data_window_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_2_V_V_write = 1'b1;
    end else begin
        data_window_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_30_V_V_read = 1'b1;
    end else begin
        data_window_30_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_30_V_V_write = 1'b1;
    end else begin
        data_window_30_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_31_V_V_read = 1'b1;
    end else begin
        data_window_31_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_31_V_V_write = 1'b1;
    end else begin
        data_window_31_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_3_V_V_read = 1'b1;
    end else begin
        data_window_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_3_V_V_write = 1'b1;
    end else begin
        data_window_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_4_V_V_read = 1'b1;
    end else begin
        data_window_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_4_V_V_write = 1'b1;
    end else begin
        data_window_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_5_V_V_read = 1'b1;
    end else begin
        data_window_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_5_V_V_write = 1'b1;
    end else begin
        data_window_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_6_V_V_read = 1'b1;
    end else begin
        data_window_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd2))) begin
        data_window_6_V_V_write = 1'b1;
    end else begin
        data_window_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_7_V_V_read = 1'b1;
    end else begin
        data_window_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd3))) begin
        data_window_7_V_V_write = 1'b1;
    end else begin
        data_window_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_8_V_V_read = 1'b1;
    end else begin
        data_window_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd0))) begin
        data_window_8_V_V_write = 1'b1;
    end else begin
        data_window_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1))) begin
        data_window_9_V_V_read = 1'b1;
    end else begin
        data_window_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln_reg_2066 == 2'd1))) begin
        data_window_9_V_V_write = 1'b1;
    end else begin
        data_window_9_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_table_height17_ce0 = 1'b1;
    end else begin
        pool_table_height17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_table_width18_ce0 = 1'b1;
    end else begin
        pool_table_width18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln142_fu_1399_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln142_fu_1399_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln142_1_fu_1425_p2 = (ap_phi_mux_h_idx_assign_phi_fu_1381_p4 + 4'd1);

assign add_ln142_fu_1405_p2 = (indvar_flatten_reg_1366 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((data_window_31_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_30_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_29_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_28_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_27_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_26_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_25_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_24_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_23_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_22_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_21_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_20_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_19_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_18_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_17_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_16_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_15_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_14_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_13_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_12_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_11_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_10_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_9_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_8_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_7_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_6_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_5_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_4_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_3_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_2_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_1_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_0_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)))) | ((io_acc_block_signal_op314 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((data_window_31_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_27_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_23_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_19_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_15_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_11_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_7_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_3_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_28_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_24_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_20_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_16_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_12_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_8_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_4_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_0_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_29_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_25_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_21_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_17_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_13_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_9_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_5_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_1_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_30_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_26_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_22_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_18_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_14_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_10_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_6_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_2_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((io_acc_block_signal_op160 == 1'b0) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((data_window_31_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_30_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_29_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_28_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_27_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_26_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_25_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_24_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_23_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_22_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_21_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_20_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_19_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_18_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_17_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_16_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_15_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_14_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_13_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_12_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_11_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_10_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_9_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_8_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_7_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_6_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_5_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_4_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_3_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_2_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_1_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_0_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)))) | ((io_acc_block_signal_op314 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((data_window_31_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_27_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_23_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_19_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_15_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_11_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_7_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_3_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_28_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_24_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_20_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_16_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_12_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_8_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_4_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_0_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_29_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_25_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_21_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_17_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_13_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_9_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_5_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_1_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_30_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_26_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_22_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_18_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_14_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_10_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_6_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_2_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((io_acc_block_signal_op160 == 1'b0) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((data_window_31_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_30_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_29_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_28_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_27_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_26_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_25_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_24_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_23_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_22_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_21_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_20_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_19_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_18_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_17_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_16_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_15_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_14_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_13_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_12_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_11_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_10_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_9_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_8_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_7_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_6_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_5_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_4_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_3_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_2_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_1_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_0_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)))) | ((io_acc_block_signal_op314 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((data_window_31_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_27_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_23_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_19_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_15_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_11_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_7_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_3_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_28_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_24_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_20_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_16_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_12_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_8_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_4_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_0_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_29_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_25_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_21_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_17_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_13_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_9_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_5_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_1_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_30_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_26_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_22_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_18_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_14_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_10_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_6_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_2_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((io_acc_block_signal_op160 == 1'b0) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((data_window_31_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_27_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_23_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_19_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_15_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_11_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_7_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_3_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd3)) | ((data_window_28_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_24_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_20_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_16_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_12_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_8_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_4_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_0_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd0)) | ((data_window_29_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_25_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_21_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_17_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_13_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_9_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_5_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_1_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd1)) | ((data_window_30_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_26_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_22_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_18_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_14_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_10_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_6_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((data_window_2_V_V_full_n == 1'b0) & (or_ln_reg_2066 == 2'd2)) | ((io_acc_block_signal_op160 == 1'b0) & (icmp_ln142_reg_2037_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = (((data_window_31_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_30_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_29_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_28_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_27_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_26_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_25_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_24_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_23_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_22_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_21_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_20_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_19_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_18_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_17_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_16_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_15_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_14_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_13_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_12_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_11_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_10_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_9_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_8_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_7_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_6_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_5_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_4_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_3_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_2_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_1_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)) | ((data_window_0_V_V_empty_n == 1'b0) & (icmp_ln879_reg_2070_pp0_iter2_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((io_acc_block_signal_op314 == 1'b0) & (icmp_ln879_reg_2070_pp0_iter3_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign i_iw_fu_1449_p2 = (select_ln81_fu_1417_p3 + 4'd1);

assign icmp_ln142_fu_1399_p2 = ((indvar_flatten_reg_1366 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_1411_p2 = ((wp_idx_reg_1388 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1496_10_fu_1631_p2 = (($signed(data_window_14_V_V_dout) < $signed(data_window_15_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_1790_p2 = (($signed(select_ln94_9_reg_2110) < $signed(select_ln94_10_reg_2116)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_1645_p2 = (($signed(data_window_16_V_V_dout) < $signed(data_window_17_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_1659_p2 = (($signed(data_window_18_V_V_dout) < $signed(data_window_19_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_1801_p2 = (($signed(select_ln94_12_reg_2122) < $signed(select_ln94_13_reg_2128)) ? 1'b1 : 1'b0);

assign icmp_ln1496_15_fu_1673_p2 = (($signed(data_window_20_V_V_dout) < $signed(data_window_21_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_16_fu_1687_p2 = (($signed(data_window_22_V_V_dout) < $signed(data_window_23_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_17_fu_1812_p2 = (($signed(select_ln94_15_reg_2134) < $signed(select_ln94_16_reg_2140)) ? 1'b1 : 1'b0);

assign icmp_ln1496_18_fu_1701_p2 = (($signed(data_window_24_V_V_dout) < $signed(data_window_25_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_19_fu_1715_p2 = (($signed(data_window_26_V_V_dout) < $signed(data_window_27_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_1547_p2 = (($signed(data_window_2_V_V_dout) < $signed(data_window_3_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_20_fu_1823_p2 = (($signed(select_ln94_18_reg_2146) < $signed(select_ln94_19_reg_2152)) ? 1'b1 : 1'b0);

assign icmp_ln1496_21_fu_1729_p2 = (($signed(data_window_28_V_V_dout) < $signed(data_window_29_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_22_fu_1743_p2 = (($signed(data_window_30_V_V_dout) < $signed(data_window_31_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_23_fu_1834_p2 = (($signed(select_ln94_21_reg_2158) < $signed(select_ln94_22_reg_2164)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_1757_p2 = (($signed(select_ln94_reg_2074) < $signed(select_ln94_1_reg_2080)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_1561_p2 = (($signed(data_window_4_V_V_dout) < $signed(data_window_5_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_1575_p2 = (($signed(data_window_6_V_V_dout) < $signed(data_window_7_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_1768_p2 = (($signed(select_ln94_3_reg_2086) < $signed(select_ln94_4_reg_2092)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_1589_p2 = (($signed(data_window_8_V_V_dout) < $signed(data_window_9_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_1603_p2 = (($signed(data_window_10_V_V_dout) < $signed(data_window_11_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_1779_p2 = (($signed(select_ln94_6_reg_2098) < $signed(select_ln94_7_reg_2104)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_1617_p2 = (($signed(data_window_12_V_V_dout) < $signed(data_window_13_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_1533_p2 = (($signed(data_window_0_V_V_dout) < $signed(data_window_1_V_V_dout)) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1463_p2 = ((or_ln_fu_1455_p3 == 2'd3) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op160 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign io_acc_block_signal_op314 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign or_ln_fu_1455_p3 = {{pool_table_height17_q0}, {pool_table_width18_q0}};

assign pool_table_height17_address0 = zext_ln81_fu_1439_p1;

assign pool_table_width18_address0 = zext_ln89_fu_1444_p1;

assign res_V_data_0_V_din = ((icmp_ln1496_2_fu_1757_p2[0:0] === 1'b1) ? select_ln94_1_reg_2080 : select_ln94_reg_2074);

assign res_V_data_1_V_din = ((icmp_ln1496_5_fu_1768_p2[0:0] === 1'b1) ? select_ln94_4_reg_2092 : select_ln94_3_reg_2086);

assign res_V_data_2_V_din = ((icmp_ln1496_8_fu_1779_p2[0:0] === 1'b1) ? select_ln94_7_reg_2104 : select_ln94_6_reg_2098);

assign res_V_data_3_V_din = ((icmp_ln1496_11_fu_1790_p2[0:0] === 1'b1) ? select_ln94_10_reg_2116 : select_ln94_9_reg_2110);

assign res_V_data_4_V_din = ((icmp_ln1496_14_fu_1801_p2[0:0] === 1'b1) ? select_ln94_13_reg_2128 : select_ln94_12_reg_2122);

assign res_V_data_5_V_din = ((icmp_ln1496_17_fu_1812_p2[0:0] === 1'b1) ? select_ln94_16_reg_2140 : select_ln94_15_reg_2134);

assign res_V_data_6_V_din = ((icmp_ln1496_20_fu_1823_p2[0:0] === 1'b1) ? select_ln94_19_reg_2152 : select_ln94_18_reg_2146);

assign res_V_data_7_V_din = ((icmp_ln1496_23_fu_1834_p2[0:0] === 1'b1) ? select_ln94_22_reg_2164 : select_ln94_21_reg_2158);

assign select_ln81_1_fu_1431_p3 = ((icmp_ln143_fu_1411_p2[0:0] === 1'b1) ? add_ln142_1_fu_1425_p2 : ap_phi_mux_h_idx_assign_phi_fu_1381_p4);

assign select_ln81_fu_1417_p3 = ((icmp_ln143_fu_1411_p2[0:0] === 1'b1) ? 4'd0 : wp_idx_reg_1388);

assign select_ln94_10_fu_1637_p3 = ((icmp_ln1496_10_fu_1631_p2[0:0] === 1'b1) ? data_window_15_V_V_dout : data_window_14_V_V_dout);

assign select_ln94_12_fu_1651_p3 = ((icmp_ln1496_12_fu_1645_p2[0:0] === 1'b1) ? data_window_17_V_V_dout : data_window_16_V_V_dout);

assign select_ln94_13_fu_1665_p3 = ((icmp_ln1496_13_fu_1659_p2[0:0] === 1'b1) ? data_window_19_V_V_dout : data_window_18_V_V_dout);

assign select_ln94_15_fu_1679_p3 = ((icmp_ln1496_15_fu_1673_p2[0:0] === 1'b1) ? data_window_21_V_V_dout : data_window_20_V_V_dout);

assign select_ln94_16_fu_1693_p3 = ((icmp_ln1496_16_fu_1687_p2[0:0] === 1'b1) ? data_window_23_V_V_dout : data_window_22_V_V_dout);

assign select_ln94_18_fu_1707_p3 = ((icmp_ln1496_18_fu_1701_p2[0:0] === 1'b1) ? data_window_25_V_V_dout : data_window_24_V_V_dout);

assign select_ln94_19_fu_1721_p3 = ((icmp_ln1496_19_fu_1715_p2[0:0] === 1'b1) ? data_window_27_V_V_dout : data_window_26_V_V_dout);

assign select_ln94_1_fu_1553_p3 = ((icmp_ln1496_1_fu_1547_p2[0:0] === 1'b1) ? data_window_3_V_V_dout : data_window_2_V_V_dout);

assign select_ln94_21_fu_1735_p3 = ((icmp_ln1496_21_fu_1729_p2[0:0] === 1'b1) ? data_window_29_V_V_dout : data_window_28_V_V_dout);

assign select_ln94_22_fu_1749_p3 = ((icmp_ln1496_22_fu_1743_p2[0:0] === 1'b1) ? data_window_31_V_V_dout : data_window_30_V_V_dout);

assign select_ln94_3_fu_1567_p3 = ((icmp_ln1496_3_fu_1561_p2[0:0] === 1'b1) ? data_window_5_V_V_dout : data_window_4_V_V_dout);

assign select_ln94_4_fu_1581_p3 = ((icmp_ln1496_4_fu_1575_p2[0:0] === 1'b1) ? data_window_7_V_V_dout : data_window_6_V_V_dout);

assign select_ln94_6_fu_1595_p3 = ((icmp_ln1496_6_fu_1589_p2[0:0] === 1'b1) ? data_window_9_V_V_dout : data_window_8_V_V_dout);

assign select_ln94_7_fu_1609_p3 = ((icmp_ln1496_7_fu_1603_p2[0:0] === 1'b1) ? data_window_11_V_V_dout : data_window_10_V_V_dout);

assign select_ln94_9_fu_1623_p3 = ((icmp_ln1496_9_fu_1617_p2[0:0] === 1'b1) ? data_window_13_V_V_dout : data_window_12_V_V_dout);

assign select_ln94_fu_1539_p3 = ((icmp_ln1496_fu_1533_p2[0:0] === 1'b1) ? data_window_1_V_V_dout : data_window_0_V_V_dout);

assign start_out = real_start;

assign zext_ln81_fu_1439_p1 = select_ln81_1_fu_1431_p3;

assign zext_ln89_fu_1444_p1 = select_ln81_fu_1417_p3;

endmodule //pooling2d_cl_array_array_ap_fixed_8u_config7_s
