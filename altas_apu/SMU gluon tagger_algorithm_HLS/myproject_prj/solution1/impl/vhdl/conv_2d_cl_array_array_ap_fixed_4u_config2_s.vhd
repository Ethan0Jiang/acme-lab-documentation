-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_array_ap_fixed_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_TVALID : IN STD_LOGIC;
    data_V_data_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_array_ap_fixed_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv24_57 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001010111";
    constant ap_const_lv24_5B : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001011011";
    constant ap_const_lv23_3B : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000111011";
    constant ap_const_lv24_68 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001101000";
    constant ap_const_lv24_91 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010010001";
    constant ap_const_lv24_FFFECE : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111011001110";
    constant ap_const_lv23_7FFFDD : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111011101";
    constant ap_const_lv24_FFFF58 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101011000";
    constant ap_const_lv24_46 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000110";
    constant ap_const_lv24_92 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010010010";
    constant ap_const_lv24_FFFF48 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101001000";
    constant ap_const_lv24_FFFF26 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100100110";
    constant ap_const_lv24_FFFF3F : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100111111";
    constant ap_const_lv24_FFFF8B : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110001011";
    constant ap_const_lv24_7A : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001111010";
    constant ap_const_lv24_FFFDE7 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111110111100111";
    constant ap_const_lv24_FFFF43 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101000011";
    constant ap_const_lv24_FFFEE3 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111011100011";
    constant ap_const_lv24_FFFF36 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100110110";
    constant ap_const_lv23_2B : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000101011";
    constant ap_const_lv24_56 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001010110";
    constant ap_const_lv24_FFFED9 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111011011001";
    constant ap_const_lv24_43 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv10_384 : STD_LOGIC_VECTOR (9 downto 0) := "1110000100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv9_1B : STD_LOGIC_VECTOR (8 downto 0) := "000011011";
    constant ap_const_lv9_3F : STD_LOGIC_VECTOR (8 downto 0) := "000111111";
    constant ap_const_lv9_36 : STD_LOGIC_VECTOR (8 downto 0) := "000110110";
    constant ap_const_lv9_24 : STD_LOGIC_VECTOR (8 downto 0) := "000100100";
    constant ap_const_lv9_49 : STD_LOGIC_VECTOR (8 downto 0) := "001001001";
    constant ap_const_lv9_DB : STD_LOGIC_VECTOR (8 downto 0) := "011011011";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_1B6 : STD_LOGIC_VECTOR (8 downto 0) := "110110110";
    constant ap_const_lv9_124 : STD_LOGIC_VECTOR (8 downto 0) := "100100100";
    constant ap_const_lv9_48 : STD_LOGIC_VECTOR (8 downto 0) := "001001000";
    constant ap_const_lv9_D8 : STD_LOGIC_VECTOR (8 downto 0) := "011011000";
    constant ap_const_lv9_1F8 : STD_LOGIC_VECTOR (8 downto 0) := "111111000";
    constant ap_const_lv9_1B0 : STD_LOGIC_VECTOR (8 downto 0) := "110110000";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv9_C0 : STD_LOGIC_VECTOR (8 downto 0) := "011000000";
    constant ap_const_lv9_1C0 : STD_LOGIC_VECTOR (8 downto 0) := "111000000";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv9_1E8 : STD_LOGIC_VECTOR (8 downto 0) := "111101000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln53_fu_4661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal p_Result_s_reg_6050 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_6050_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_623 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_idx_assign_reg_634 : STD_LOGIC_VECTOR (4 downto 0);
    signal wp_idx_reg_645 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln53_reg_5971 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal data_window_0_V_V_full_n : STD_LOGIC;
    signal data_window_0_V_V_write : STD_LOGIC;
    signal trunc_ln14_reg_6014 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_1_V_V_full_n : STD_LOGIC;
    signal data_window_1_V_V_write : STD_LOGIC;
    signal tmp_16_reg_6018 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_2_V_V_full_n : STD_LOGIC;
    signal data_window_2_V_V_write : STD_LOGIC;
    signal tmp_17_reg_6022 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_3_V_V_full_n : STD_LOGIC;
    signal data_window_3_V_V_write : STD_LOGIC;
    signal tmp_18_reg_6026 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_4_V_V_full_n : STD_LOGIC;
    signal data_window_4_V_V_write : STD_LOGIC;
    signal tmp_19_reg_6030 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_5_V_V_full_n : STD_LOGIC;
    signal data_window_5_V_V_write : STD_LOGIC;
    signal tmp_20_reg_6034 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_6_V_V_full_n : STD_LOGIC;
    signal data_window_6_V_V_write : STD_LOGIC;
    signal tmp_21_reg_6038 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_7_V_V_full_n : STD_LOGIC;
    signal data_window_7_V_V_write : STD_LOGIC;
    signal tmp_22_reg_6042 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_8_V_V_full_n : STD_LOGIC;
    signal data_window_8_V_V_write : STD_LOGIC;
    signal tmp_23_reg_6046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal data_window_0_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_0_V_V_empty_n : STD_LOGIC;
    signal data_window_0_V_V_read : STD_LOGIC;
    signal p_Result_s_reg_6050_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal data_window_1_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_1_V_V_empty_n : STD_LOGIC;
    signal data_window_1_V_V_read : STD_LOGIC;
    signal data_window_2_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_2_V_V_empty_n : STD_LOGIC;
    signal data_window_2_V_V_read : STD_LOGIC;
    signal data_window_3_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_3_V_V_empty_n : STD_LOGIC;
    signal data_window_3_V_V_read : STD_LOGIC;
    signal data_window_4_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_4_V_V_empty_n : STD_LOGIC;
    signal data_window_4_V_V_read : STD_LOGIC;
    signal data_window_5_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_5_V_V_empty_n : STD_LOGIC;
    signal data_window_5_V_V_read : STD_LOGIC;
    signal data_window_6_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_6_V_V_empty_n : STD_LOGIC;
    signal data_window_6_V_V_read : STD_LOGIC;
    signal data_window_7_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_7_V_V_empty_n : STD_LOGIC;
    signal data_window_7_V_V_read : STD_LOGIC;
    signal data_window_8_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data_window_8_V_V_empty_n : STD_LOGIC;
    signal data_window_8_V_V_read : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal io_acc_block_signal_op318 : STD_LOGIC;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln53_fu_4667_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln13_5_fu_4751_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_5_reg_5980 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln53_fu_4759_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_1_fu_4809_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_1_reg_5991 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_reg_5996 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_5996_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_iw_fu_4817_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln14_fu_4894_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_6050_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_6050_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_191_reg_6054 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_192_reg_6061 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_193_reg_6070 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_194_reg_6076 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_195_reg_6081 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_196_reg_6088 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_197_reg_6095 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_198_reg_6103 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_199_reg_6112 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_2141_reg_6118 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln708_2115_reg_6123 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_2119_reg_6128 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_2120_reg_6133 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2122_reg_6138 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2126_reg_6143 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2127_reg_6148 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2129_reg_6153 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2133_reg_6158 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2136_reg_6163 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_2137_reg_6168 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2140_reg_6173 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_2146_reg_6178 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_fu_5623_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_reg_6183 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4395_fu_5629_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4395_reg_6188 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4398_fu_5635_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4398_reg_6193 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4403_fu_5641_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4403_reg_6198 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4404_fu_5647_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4404_reg_6203 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4407_fu_5653_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4407_reg_6208 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4412_fu_5659_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4412_reg_6213 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4419_fu_5695_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_4419_reg_6218 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_4421_fu_5701_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4421_reg_6223 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4428_fu_5733_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_4428_reg_6228 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_32_fu_5781_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_32_reg_6233 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_1_V_fu_5817_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_1_V_reg_6238 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_2_V_fu_5840_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_2_V_reg_6243 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_3_V_fu_5863_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_3_V_reg_6248 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_2963_fu_656_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2559_fu_5242_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2966_fu_657_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2564_fu_5324_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2955_fu_659_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2961_fu_660_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2558_fu_5195_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2962_fu_661_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2960_fu_663_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2970_fu_665_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2974_fu_666_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2579_fu_5556_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2964_fu_668_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2971_fu_669_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2568_fu_5398_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2952_fu_672_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2546_fu_4983_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2972_fu_673_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_674_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2956_fu_675_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2556_fu_5145_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2975_fu_678_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2965_fu_679_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2957_fu_680_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2973_fu_681_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2969_fu_683_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2958_fu_684_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2951_fu_685_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2953_fu_686_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2549_fu_5050_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2967_fu_687_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2968_fu_689_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2959_fu_690_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_2954_fu_691_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_4619_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_fu_4635_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln24_fu_4641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln23_fu_4647_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln54_fu_4673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln53_2_fu_4687_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_4693_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln23_4_fu_4709_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln24_4_fu_4715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln23_5_fu_4721_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln13_3_fu_4703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_2_fu_4727_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln13_fu_4629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_fu_4653_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_3_fu_4735_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_4_fu_4743_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_fu_4679_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_fu_4767_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_2_fu_4783_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln24_3_fu_4789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln23_2_fu_4795_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln13_4_fu_4777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_1_fu_4801_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln13_fu_4823_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln321_2_fu_4828_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_s_fu_4838_p26 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_s_fu_4838_p27 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_2141_fu_4970_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_674_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2951_fu_685_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_51_fu_5009_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_fu_4980_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_2547_fu_5016_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_1243_fu_5020_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln708_2113_fu_5026_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1118_2952_fu_672_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_52_fu_5061_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_2550_fu_5055_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_2552_fu_5068_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_1244_fu_5072_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_2953_fu_686_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln_fu_5098_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_2554_fu_5105_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_fu_5109_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_2551_fu_5058_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_1245_fu_5115_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln708_2117_fu_5121_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1118_2954_fu_691_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2955_fu_659_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1118_2956_fu_675_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2957_fu_680_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2958_fu_684_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2959_fu_690_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2960_fu_663_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2961_fu_660_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2962_fu_661_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2963_fu_656_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2964_fu_668_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2965_fu_679_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_s_fu_5278_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_1235_fu_5289_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_2561_fu_5296_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_2560_fu_5285_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1118_fu_5300_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_2130_fu_5306_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_2966_fu_657_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2967_fu_687_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_2132_fu_5339_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_2968_fu_689_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_1236_fu_5363_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_2565_fu_5370_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1118_1246_fu_5374_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln708_2134_fu_5380_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1118_2969_fu_683_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2970_fu_665_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1118_2971_fu_669_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_1237_fu_5436_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_2570_fu_5443_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_2569_fu_5403_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_1247_fu_5447_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln708_2138_fu_5453_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_2972_fu_673_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_1238_fu_5484_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_1239_fu_5495_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_2575_fu_5502_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_2574_fu_5491_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_1248_fu_5506_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_53_fu_5525_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_2573_fu_5471_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_2577_fu_5532_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_1249_fu_5536_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_2142_fu_5542_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_2973_fu_681_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2974_fu_666_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_1240_fu_5582_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_2580_fu_5589_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_1250_fu_5593_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_2145_fu_5599_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_2975_fu_678_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_2123_fu_5202_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln2_fu_4989_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2135_fu_5406_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2131_fu_5329_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2143_fu_5562_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2139_fu_5474_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2116_fu_5088_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_s_fu_4999_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2128_fu_5258_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2124_fu_5212_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln708_1043_fu_5349_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2144_fu_5572_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2125_fu_5222_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2121_fu_5175_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_2581_fu_5609_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4416_fu_5665_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_2576_fu_5522_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_2555_fu_5131_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln703_4417_fu_5675_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_2548_fu_5036_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln703_699_fu_5681_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln703_4418_fu_5685_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln703_698_fu_5671_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_700_fu_5691_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_2118_fu_5135_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2114_fu_5040_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_2578_fu_5552_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_2571_fu_5463_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_2566_fu_5390_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln703_4426_fu_5713_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_2562_fu_5316_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln703_fu_5719_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln703_4427_fu_5723_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln703_4425_fu_5707_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_702_fu_5729_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_4396_fu_5751_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_2553_fu_5739_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4399_fu_5760_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln708_fu_5742_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_fu_5766_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4400_fu_5770_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4397_fu_5755_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4401_fu_5776_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4405_fu_5787_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln708_1045_fu_5748_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_4408_fu_5796_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln708_1044_fu_5745_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_697_fu_5802_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4409_fu_5806_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4406_fu_5791_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4410_fu_5812_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4413_fu_5823_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4414_fu_5827_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4415_fu_5832_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_701_fu_5837_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4422_fu_5846_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4423_fu_5850_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4424_fu_5855_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_703_fu_5860_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal res_0_V_fu_5869_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal res_1_V_fu_5881_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal res_2_V_fu_5893_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_data_3_V_fu_5905_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TVALID_int : STD_LOGIC;
    signal data_V_data_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_ack_in : STD_LOGIC;

    component myproject_mux_255_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (8 downto 0);
        din4 : IN STD_LOGIC_VECTOR (8 downto 0);
        din5 : IN STD_LOGIC_VECTOR (8 downto 0);
        din6 : IN STD_LOGIC_VECTOR (8 downto 0);
        din7 : IN STD_LOGIC_VECTOR (8 downto 0);
        din8 : IN STD_LOGIC_VECTOR (8 downto 0);
        din9 : IN STD_LOGIC_VECTOR (8 downto 0);
        din10 : IN STD_LOGIC_VECTOR (8 downto 0);
        din11 : IN STD_LOGIC_VECTOR (8 downto 0);
        din12 : IN STD_LOGIC_VECTOR (8 downto 0);
        din13 : IN STD_LOGIC_VECTOR (8 downto 0);
        din14 : IN STD_LOGIC_VECTOR (8 downto 0);
        din15 : IN STD_LOGIC_VECTOR (8 downto 0);
        din16 : IN STD_LOGIC_VECTOR (8 downto 0);
        din17 : IN STD_LOGIC_VECTOR (8 downto 0);
        din18 : IN STD_LOGIC_VECTOR (8 downto 0);
        din19 : IN STD_LOGIC_VECTOR (8 downto 0);
        din20 : IN STD_LOGIC_VECTOR (8 downto 0);
        din21 : IN STD_LOGIC_VECTOR (8 downto 0);
        din22 : IN STD_LOGIC_VECTOR (8 downto 0);
        din23 : IN STD_LOGIC_VECTOR (8 downto 0);
        din24 : IN STD_LOGIC_VECTOR (8 downto 0);
        din25 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component fifo_w16_d84_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    myproject_mux_255_9_1_1_U3 : component myproject_mux_255_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 9,
        din9_WIDTH => 9,
        din10_WIDTH => 9,
        din11_WIDTH => 9,
        din12_WIDTH => 9,
        din13_WIDTH => 9,
        din14_WIDTH => 9,
        din15_WIDTH => 9,
        din16_WIDTH => 9,
        din17_WIDTH => 9,
        din18_WIDTH => 9,
        din19_WIDTH => 9,
        din20_WIDTH => 9,
        din21_WIDTH => 9,
        din22_WIDTH => 9,
        din23_WIDTH => 9,
        din24_WIDTH => 9,
        din25_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        din0 => ap_const_lv9_1,
        din1 => ap_const_lv9_3,
        din2 => ap_const_lv9_7,
        din3 => ap_const_lv9_6,
        din4 => ap_const_lv9_4,
        din5 => ap_const_lv9_9,
        din6 => ap_const_lv9_1B,
        din7 => ap_const_lv9_3F,
        din8 => ap_const_lv9_36,
        din9 => ap_const_lv9_24,
        din10 => ap_const_lv9_49,
        din11 => ap_const_lv9_DB,
        din12 => ap_const_lv9_1FF,
        din13 => ap_const_lv9_1B6,
        din14 => ap_const_lv9_124,
        din15 => ap_const_lv9_48,
        din16 => ap_const_lv9_D8,
        din17 => ap_const_lv9_1F8,
        din18 => ap_const_lv9_1B0,
        din19 => ap_const_lv9_120,
        din20 => ap_const_lv9_40,
        din21 => ap_const_lv9_C0,
        din22 => ap_const_lv9_1C0,
        din23 => ap_const_lv9_180,
        din24 => ap_const_lv9_100,
        din25 => p_Val2_s_fu_4838_p26,
        dout => p_Val2_s_fu_4838_p27);

    data_window_0_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_0_V_V_full_n,
        if_write => data_window_0_V_V_write,
        if_dout => data_window_0_V_V_dout,
        if_empty_n => data_window_0_V_V_empty_n,
        if_read => data_window_0_V_V_read);

    data_window_1_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_1_V_V_full_n,
        if_write => data_window_1_V_V_write,
        if_dout => data_window_1_V_V_dout,
        if_empty_n => data_window_1_V_V_empty_n,
        if_read => data_window_1_V_V_read);

    data_window_2_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_2_V_V_full_n,
        if_write => data_window_2_V_V_write,
        if_dout => data_window_2_V_V_dout,
        if_empty_n => data_window_2_V_V_empty_n,
        if_read => data_window_2_V_V_read);

    data_window_3_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_3_V_V_full_n,
        if_write => data_window_3_V_V_write,
        if_dout => data_window_3_V_V_dout,
        if_empty_n => data_window_3_V_V_empty_n,
        if_read => data_window_3_V_V_read);

    data_window_4_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_4_V_V_full_n,
        if_write => data_window_4_V_V_write,
        if_dout => data_window_4_V_V_dout,
        if_empty_n => data_window_4_V_V_empty_n,
        if_read => data_window_4_V_V_read);

    data_window_5_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_5_V_V_full_n,
        if_write => data_window_5_V_V_write,
        if_dout => data_window_5_V_V_dout,
        if_empty_n => data_window_5_V_V_empty_n,
        if_read => data_window_5_V_V_read);

    data_window_6_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_6_V_V_full_n,
        if_write => data_window_6_V_V_write,
        if_dout => data_window_6_V_V_dout,
        if_empty_n => data_window_6_V_V_empty_n,
        if_read => data_window_6_V_V_read);

    data_window_7_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_7_V_V_full_n,
        if_write => data_window_7_V_V_write,
        if_dout => data_window_7_V_V_dout,
        if_empty_n => data_window_7_V_V_empty_n,
        if_read => data_window_7_V_V_read);

    data_window_8_V_V_fifo_U : component fifo_w16_d84_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp_V_reg_5996_pp0_iter1_reg,
        if_full_n => data_window_8_V_V_full_n,
        if_write => data_window_8_V_V_write,
        if_dout => data_window_8_V_V_dout,
        if_empty_n => data_window_8_V_V_empty_n,
        if_read => data_window_8_V_V_read);

    regslice_both_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_V_TDATA,
        vld_in => data_V_data_V_TVALID,
        ack_in => regslice_both_data_V_data_V_U_ack_in,
        data_out => data_V_data_V_TDATA_int,
        vld_out => data_V_data_V_TVALID_int,
        ack_out => data_V_data_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    h_idx_assign_reg_634_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                h_idx_assign_reg_634 <= select_ln53_fu_4759_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_idx_assign_reg_634 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_623 <= add_ln53_fu_4667_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_623 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    wp_idx_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                wp_idx_reg_645 <= i_iw_fu_4817_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                wp_idx_reg_645 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Result_s_reg_6050_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_1_V_reg_6238 <= acc_1_V_fu_5817_p2;
                acc_2_V_reg_6243 <= acc_2_V_fu_5840_p2;
                acc_3_V_reg_6248 <= acc_3_V_fu_5863_p2;
                p_Val2_32_reg_6233 <= p_Val2_32_fu_5781_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Result_s_reg_6050_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_4395_reg_6188 <= add_ln703_4395_fu_5629_p2;
                add_ln703_4398_reg_6193 <= add_ln703_4398_fu_5635_p2;
                add_ln703_4403_reg_6198 <= add_ln703_4403_fu_5641_p2;
                add_ln703_4404_reg_6203 <= add_ln703_4404_fu_5647_p2;
                add_ln703_4407_reg_6208 <= add_ln703_4407_fu_5653_p2;
                add_ln703_4412_reg_6213 <= add_ln703_4412_fu_5659_p2;
                add_ln703_4419_reg_6218 <= add_ln703_4419_fu_5695_p2;
                add_ln703_4421_reg_6223 <= add_ln703_4421_fu_5701_p2;
                add_ln703_4428_reg_6228 <= add_ln703_4428_fu_5733_p2;
                add_ln703_reg_6183 <= add_ln703_fu_5623_p2;
                trunc_ln708_2115_reg_6123 <= sub_ln1118_1244_fu_5072_p2(20 downto 14);
                trunc_ln708_2119_reg_6128 <= mul_ln1118_2955_fu_659_p2(22 downto 14);
                trunc_ln708_2120_reg_6133 <= mul_ln1118_2956_fu_675_p2(23 downto 14);
                trunc_ln708_2122_reg_6138 <= mul_ln1118_2958_fu_684_p2(23 downto 14);
                trunc_ln708_2126_reg_6143 <= mul_ln1118_2962_fu_661_p2(23 downto 14);
                trunc_ln708_2127_reg_6148 <= mul_ln1118_2963_fu_656_p2(23 downto 14);
                trunc_ln708_2129_reg_6153 <= mul_ln1118_2965_fu_679_p2(23 downto 14);
                trunc_ln708_2133_reg_6158 <= mul_ln1118_2968_fu_689_p2(23 downto 14);
                trunc_ln708_2136_reg_6163 <= mul_ln1118_2970_fu_665_p2(22 downto 14);
                trunc_ln708_2137_reg_6168 <= mul_ln1118_2971_fu_669_p2(23 downto 14);
                trunc_ln708_2140_reg_6173 <= sub_ln1118_1248_fu_5506_p2(21 downto 14);
                trunc_ln708_2146_reg_6178 <= mul_ln1118_2975_fu_678_p2(23 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln53_reg_5971 <= icmp_ln53_fu_4661_p2;
                p_Result_s_reg_6050 <= p_Val2_s_fu_4838_p27(8 downto 8);
                tmp_16_reg_6018 <= p_Val2_s_fu_4838_p27(1 downto 1);
                tmp_17_reg_6022 <= p_Val2_s_fu_4838_p27(2 downto 2);
                tmp_18_reg_6026 <= p_Val2_s_fu_4838_p27(3 downto 3);
                tmp_19_reg_6030 <= p_Val2_s_fu_4838_p27(4 downto 4);
                tmp_20_reg_6034 <= p_Val2_s_fu_4838_p27(5 downto 5);
                tmp_21_reg_6038 <= p_Val2_s_fu_4838_p27(6 downto 6);
                tmp_22_reg_6042 <= p_Val2_s_fu_4838_p27(7 downto 7);
                tmp_23_reg_6046 <= p_Val2_s_fu_4838_p27(8 downto 8);
                tmp_V_reg_5996_pp0_iter1_reg <= tmp_V_reg_5996;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                p_Result_s_reg_6050_pp0_iter2_reg <= p_Result_s_reg_6050;
                p_Result_s_reg_6050_pp0_iter3_reg <= p_Result_s_reg_6050_pp0_iter2_reg;
                p_Result_s_reg_6050_pp0_iter4_reg <= p_Result_s_reg_6050_pp0_iter3_reg;
                p_Result_s_reg_6050_pp0_iter5_reg <= p_Result_s_reg_6050_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln13_1_reg_5991 <= select_ln13_1_fu_4809_p3;
                select_ln13_5_reg_5980 <= select_ln13_5_fu_4751_p3;
                tmp_V_reg_5996 <= data_V_data_V_TDATA_int;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_191_reg_6054 <= data_window_0_V_V_dout;
                tmp_V_192_reg_6061 <= data_window_1_V_V_dout;
                tmp_V_193_reg_6070 <= data_window_2_V_V_dout;
                tmp_V_194_reg_6076 <= data_window_3_V_V_dout;
                tmp_V_195_reg_6081 <= data_window_4_V_V_dout;
                tmp_V_196_reg_6088 <= data_window_5_V_V_dout;
                tmp_V_197_reg_6095 <= data_window_6_V_V_dout;
                tmp_V_198_reg_6103 <= data_window_7_V_V_dout;
                tmp_V_199_reg_6112 <= data_window_8_V_V_dout;
                trunc_ln708_2141_reg_6118 <= trunc_ln708_2141_fu_4970_p1(15 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_reg_5971 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln14_reg_6014 <= trunc_ln14_fu_4894_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln53_fu_4661_p2, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln53_fu_4661_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((icmp_ln53_fu_4661_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_1_V_fu_5817_p2 <= std_logic_vector(unsigned(add_ln703_4406_fu_5791_p2) + unsigned(add_ln703_4410_fu_5812_p2));
    acc_2_V_fu_5840_p2 <= std_logic_vector(unsigned(add_ln703_4415_fu_5832_p2) + unsigned(sext_ln703_701_fu_5837_p1));
    acc_3_V_fu_5863_p2 <= std_logic_vector(unsigned(add_ln703_4424_fu_5855_p2) + unsigned(sext_ln703_703_fu_5860_p1));
    add_ln1118_fu_5300_p2 <= std_logic_vector(signed(sext_ln1118_2561_fu_5296_p1) + signed(sext_ln1118_2560_fu_5285_p1));
    add_ln321_2_fu_4828_p2 <= std_logic_vector(unsigned(shl_ln13_fu_4823_p2) + unsigned(select_ln13_1_reg_5991));
    add_ln53_2_fu_4687_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(h_idx_assign_reg_634));
    add_ln53_fu_4667_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_623) + unsigned(ap_const_lv10_1));
    add_ln703_4395_fu_5629_p2 <= std_logic_vector(unsigned(trunc_ln708_2135_fu_5406_p4) + unsigned(trunc_ln708_2131_fu_5329_p4));
    add_ln703_4396_fu_5751_p2 <= std_logic_vector(unsigned(trunc_ln708_2127_reg_6148) + unsigned(add_ln703_4395_reg_6188));
    add_ln703_4397_fu_5755_p2 <= std_logic_vector(unsigned(add_ln703_reg_6183) + unsigned(add_ln703_4396_fu_5751_p2));
    add_ln703_4398_fu_5635_p2 <= std_logic_vector(unsigned(trunc_ln708_2143_fu_5562_p4) + unsigned(trunc_ln708_2139_fu_5474_p4));
    add_ln703_4399_fu_5760_p2 <= std_logic_vector(signed(sext_ln1118_2553_fu_5739_p1) + signed(ap_const_lv8_12));
    add_ln703_4400_fu_5770_p2 <= std_logic_vector(signed(sext_ln708_fu_5742_p1) + signed(sext_ln703_fu_5766_p1));
    add_ln703_4401_fu_5776_p2 <= std_logic_vector(unsigned(add_ln703_4398_reg_6193) + unsigned(add_ln703_4400_fu_5770_p2));
    add_ln703_4403_fu_5641_p2 <= std_logic_vector(unsigned(trunc_ln708_2116_fu_5088_p4) + unsigned(trunc_ln708_s_fu_4999_p4));
    add_ln703_4404_fu_5647_p2 <= std_logic_vector(unsigned(trunc_ln708_2128_fu_5258_p4) + unsigned(trunc_ln708_2124_fu_5212_p4));
    add_ln703_4405_fu_5787_p2 <= std_logic_vector(unsigned(trunc_ln708_2120_reg_6133) + unsigned(add_ln703_4404_reg_6203));
    add_ln703_4406_fu_5791_p2 <= std_logic_vector(unsigned(add_ln703_4403_reg_6198) + unsigned(add_ln703_4405_fu_5787_p2));
    add_ln703_4407_fu_5653_p2 <= std_logic_vector(signed(sext_ln708_1043_fu_5349_p1) + signed(trunc_ln708_2144_fu_5572_p4));
    add_ln703_4408_fu_5796_p2 <= std_logic_vector(signed(sext_ln708_1045_fu_5748_p1) + signed(ap_const_lv9_1E8));
    add_ln703_4409_fu_5806_p2 <= std_logic_vector(signed(sext_ln708_1044_fu_5745_p1) + signed(sext_ln703_697_fu_5802_p1));
    add_ln703_4410_fu_5812_p2 <= std_logic_vector(unsigned(add_ln703_4407_reg_6208) + unsigned(add_ln703_4409_fu_5806_p2));
    add_ln703_4412_fu_5659_p2 <= std_logic_vector(unsigned(trunc_ln708_2125_fu_5222_p4) + unsigned(trunc_ln708_2121_fu_5175_p4));
    add_ln703_4413_fu_5823_p2 <= std_logic_vector(unsigned(trunc_ln708_2137_reg_6168) + unsigned(trunc_ln708_2133_reg_6158));
    add_ln703_4414_fu_5827_p2 <= std_logic_vector(unsigned(trunc_ln708_2129_reg_6153) + unsigned(add_ln703_4413_fu_5823_p2));
    add_ln703_4415_fu_5832_p2 <= std_logic_vector(unsigned(add_ln703_4412_reg_6213) + unsigned(add_ln703_4414_fu_5827_p2));
    add_ln703_4416_fu_5665_p2 <= std_logic_vector(signed(sext_ln1118_2581_fu_5609_p1) + signed(ap_const_lv8_C3));
    add_ln703_4417_fu_5675_p2 <= std_logic_vector(signed(sext_ln1118_2576_fu_5522_p1) + signed(sext_ln1118_2555_fu_5131_p1));
    add_ln703_4418_fu_5685_p2 <= std_logic_vector(signed(sext_ln1118_2548_fu_5036_p1) + signed(sext_ln703_699_fu_5681_p1));
    add_ln703_4419_fu_5695_p2 <= std_logic_vector(signed(sext_ln703_698_fu_5671_p1) + signed(sext_ln703_700_fu_5691_p1));
    add_ln703_4421_fu_5701_p2 <= std_logic_vector(unsigned(trunc_ln708_2118_fu_5135_p4) + unsigned(trunc_ln708_2114_fu_5040_p4));
    add_ln703_4422_fu_5846_p2 <= std_logic_vector(unsigned(trunc_ln708_2146_reg_6178) + unsigned(trunc_ln708_2126_reg_6143));
    add_ln703_4423_fu_5850_p2 <= std_logic_vector(unsigned(trunc_ln708_2122_reg_6138) + unsigned(add_ln703_4422_fu_5846_p2));
    add_ln703_4424_fu_5855_p2 <= std_logic_vector(unsigned(add_ln703_4421_reg_6223) + unsigned(add_ln703_4423_fu_5850_p2));
    add_ln703_4425_fu_5707_p2 <= std_logic_vector(signed(sext_ln1118_2578_fu_5552_p1) + signed(sext_ln1118_2571_fu_5463_p1));
    add_ln703_4426_fu_5713_p2 <= std_logic_vector(signed(sext_ln1118_2566_fu_5390_p1) + signed(ap_const_lv5_14));
    add_ln703_4427_fu_5723_p2 <= std_logic_vector(signed(sext_ln1118_2562_fu_5316_p1) + signed(zext_ln703_fu_5719_p1));
    add_ln703_4428_fu_5733_p2 <= std_logic_vector(unsigned(add_ln703_4425_fu_5707_p2) + unsigned(sext_ln703_702_fu_5729_p1));
    add_ln703_fu_5623_p2 <= std_logic_vector(unsigned(trunc_ln708_2123_fu_5202_p4) + unsigned(trunc_ln2_fu_4989_p4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state9 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln53_fu_4661_p2, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, data_window_0_V_V_full_n, trunc_ln14_reg_6014, data_window_1_V_V_full_n, tmp_16_reg_6018, data_window_2_V_V_full_n, tmp_17_reg_6022, data_window_3_V_V_full_n, tmp_18_reg_6026, data_window_4_V_V_full_n, tmp_19_reg_6030, data_window_5_V_V_full_n, tmp_20_reg_6034, data_window_6_V_V_full_n, tmp_21_reg_6038, data_window_7_V_V_full_n, tmp_22_reg_6042, data_window_8_V_V_full_n, tmp_23_reg_6046, ap_enable_reg_pp0_iter2, data_window_0_V_V_empty_n, p_Result_s_reg_6050_pp0_iter2_reg, data_window_1_V_V_empty_n, data_window_2_V_V_empty_n, data_window_3_V_V_empty_n, data_window_4_V_V_empty_n, data_window_5_V_V_empty_n, data_window_6_V_V_empty_n, data_window_7_V_V_empty_n, data_window_8_V_V_empty_n, ap_enable_reg_pp0_iter3, io_acc_block_signal_op318, data_V_data_V_TVALID_int)
    begin
                ap_block_pp0_stage0_01001 <= (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (data_V_data_V_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_8_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_7_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_6_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_5_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_4_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_3_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_2_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_1_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_23_reg_6046 = ap_const_lv1_1) and (data_window_8_V_V_full_n = ap_const_logic_0)) or ((tmp_22_reg_6042 = ap_const_lv1_1) and (data_window_7_V_V_full_n = ap_const_logic_0)) or ((tmp_21_reg_6038 = ap_const_lv1_1) and (data_window_6_V_V_full_n = ap_const_logic_0)) or ((tmp_20_reg_6034 = ap_const_lv1_1) and (data_window_5_V_V_full_n = ap_const_logic_0)) or ((tmp_19_reg_6030 = ap_const_lv1_1) and (data_window_4_V_V_full_n = ap_const_logic_0)) or ((tmp_18_reg_6026 = ap_const_lv1_1) and (data_window_3_V_V_full_n = ap_const_logic_0)) or ((tmp_17_reg_6022 = ap_const_lv1_1) and (data_window_2_V_V_full_n = ap_const_logic_0)) or ((tmp_16_reg_6018 = ap_const_lv1_1) and (data_window_1_V_V_full_n = ap_const_logic_0)) or ((trunc_ln14_reg_6014 = ap_const_lv1_1) and (data_window_0_V_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln53_fu_4661_p2, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, data_window_0_V_V_full_n, trunc_ln14_reg_6014, data_window_1_V_V_full_n, tmp_16_reg_6018, data_window_2_V_V_full_n, tmp_17_reg_6022, data_window_3_V_V_full_n, tmp_18_reg_6026, data_window_4_V_V_full_n, tmp_19_reg_6030, data_window_5_V_V_full_n, tmp_20_reg_6034, data_window_6_V_V_full_n, tmp_21_reg_6038, data_window_7_V_V_full_n, tmp_22_reg_6042, data_window_8_V_V_full_n, tmp_23_reg_6046, ap_enable_reg_pp0_iter2, data_window_0_V_V_empty_n, p_Result_s_reg_6050_pp0_iter2_reg, data_window_1_V_V_empty_n, data_window_2_V_V_empty_n, data_window_3_V_V_empty_n, data_window_4_V_V_empty_n, data_window_5_V_V_empty_n, data_window_6_V_V_empty_n, data_window_7_V_V_empty_n, data_window_8_V_V_empty_n, ap_enable_reg_pp0_iter3, io_acc_block_signal_op318, data_V_data_V_TVALID_int)
    begin
                ap_block_pp0_stage0_11001 <= (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (data_V_data_V_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_8_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_7_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_6_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_5_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_4_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_3_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_2_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_1_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_23_reg_6046 = ap_const_lv1_1) and (data_window_8_V_V_full_n = ap_const_logic_0)) or ((tmp_22_reg_6042 = ap_const_lv1_1) and (data_window_7_V_V_full_n = ap_const_logic_0)) or ((tmp_21_reg_6038 = ap_const_lv1_1) and (data_window_6_V_V_full_n = ap_const_logic_0)) or ((tmp_20_reg_6034 = ap_const_lv1_1) and (data_window_5_V_V_full_n = ap_const_logic_0)) or ((tmp_19_reg_6030 = ap_const_lv1_1) and (data_window_4_V_V_full_n = ap_const_logic_0)) or ((tmp_18_reg_6026 = ap_const_lv1_1) and (data_window_3_V_V_full_n = ap_const_logic_0)) or ((tmp_17_reg_6022 = ap_const_lv1_1) and (data_window_2_V_V_full_n = ap_const_logic_0)) or ((tmp_16_reg_6018 = ap_const_lv1_1) and (data_window_1_V_V_full_n = ap_const_logic_0)) or ((trunc_ln14_reg_6014 = ap_const_lv1_1) and (data_window_0_V_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln53_fu_4661_p2, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, data_window_0_V_V_full_n, trunc_ln14_reg_6014, data_window_1_V_V_full_n, tmp_16_reg_6018, data_window_2_V_V_full_n, tmp_17_reg_6022, data_window_3_V_V_full_n, tmp_18_reg_6026, data_window_4_V_V_full_n, tmp_19_reg_6030, data_window_5_V_V_full_n, tmp_20_reg_6034, data_window_6_V_V_full_n, tmp_21_reg_6038, data_window_7_V_V_full_n, tmp_22_reg_6042, data_window_8_V_V_full_n, tmp_23_reg_6046, ap_enable_reg_pp0_iter2, data_window_0_V_V_empty_n, p_Result_s_reg_6050_pp0_iter2_reg, data_window_1_V_V_empty_n, data_window_2_V_V_empty_n, data_window_3_V_V_empty_n, data_window_4_V_V_empty_n, data_window_5_V_V_empty_n, data_window_6_V_V_empty_n, data_window_7_V_V_empty_n, data_window_8_V_V_empty_n, ap_enable_reg_pp0_iter3, io_acc_block_signal_op318, data_V_data_V_TVALID_int)
    begin
                ap_block_pp0_stage0_subdone <= (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (data_V_data_V_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_8_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_7_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_6_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_5_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_4_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_3_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_2_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_1_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_23_reg_6046 = ap_const_lv1_1) and (data_window_8_V_V_full_n = ap_const_logic_0)) or ((tmp_22_reg_6042 = ap_const_lv1_1) and (data_window_7_V_V_full_n = ap_const_logic_0)) or ((tmp_21_reg_6038 = ap_const_lv1_1) and (data_window_6_V_V_full_n = ap_const_logic_0)) or ((tmp_20_reg_6034 = ap_const_lv1_1) and (data_window_5_V_V_full_n = ap_const_logic_0)) or ((tmp_19_reg_6030 = ap_const_lv1_1) and (data_window_4_V_V_full_n = ap_const_logic_0)) or ((tmp_18_reg_6026 = ap_const_lv1_1) and (data_window_3_V_V_full_n = ap_const_logic_0)) or ((tmp_17_reg_6022 = ap_const_lv1_1) and (data_window_2_V_V_full_n = ap_const_logic_0)) or ((tmp_16_reg_6018 = ap_const_lv1_1) and (data_window_1_V_V_full_n = ap_const_logic_0)) or ((trunc_ln14_reg_6014 = ap_const_lv1_1) and (data_window_0_V_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln53_fu_4661_p2, data_V_data_V_TVALID_int)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (data_V_data_V_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(data_window_0_V_V_full_n, trunc_ln14_reg_6014, data_window_1_V_V_full_n, tmp_16_reg_6018, data_window_2_V_V_full_n, tmp_17_reg_6022, data_window_3_V_V_full_n, tmp_18_reg_6026, data_window_4_V_V_full_n, tmp_19_reg_6030, data_window_5_V_V_full_n, tmp_20_reg_6034, data_window_6_V_V_full_n, tmp_21_reg_6038, data_window_7_V_V_full_n, tmp_22_reg_6042, data_window_8_V_V_full_n, tmp_23_reg_6046)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (((tmp_23_reg_6046 = ap_const_lv1_1) and (data_window_8_V_V_full_n = ap_const_logic_0)) or ((tmp_22_reg_6042 = ap_const_lv1_1) and (data_window_7_V_V_full_n = ap_const_logic_0)) or ((tmp_21_reg_6038 = ap_const_lv1_1) and (data_window_6_V_V_full_n = ap_const_logic_0)) or ((tmp_20_reg_6034 = ap_const_lv1_1) and (data_window_5_V_V_full_n = ap_const_logic_0)) or ((tmp_19_reg_6030 = ap_const_lv1_1) and (data_window_4_V_V_full_n = ap_const_logic_0)) or ((tmp_18_reg_6026 = ap_const_lv1_1) and (data_window_3_V_V_full_n = ap_const_logic_0)) or ((tmp_17_reg_6022 = ap_const_lv1_1) and (data_window_2_V_V_full_n = ap_const_logic_0)) or ((tmp_16_reg_6018 = ap_const_lv1_1) and (data_window_1_V_V_full_n = ap_const_logic_0)) or ((trunc_ln14_reg_6014 = ap_const_lv1_1) and (data_window_0_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter3_assign_proc : process(data_window_0_V_V_empty_n, p_Result_s_reg_6050_pp0_iter2_reg, data_window_1_V_V_empty_n, data_window_2_V_V_empty_n, data_window_3_V_V_empty_n, data_window_4_V_V_empty_n, data_window_5_V_V_empty_n, data_window_6_V_V_empty_n, data_window_7_V_V_empty_n, data_window_8_V_V_empty_n)
    begin
                ap_block_state5_pp0_stage0_iter3 <= (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_8_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_7_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_6_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_5_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_4_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_3_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_2_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_1_V_V_empty_n = ap_const_logic_0)) or ((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (data_window_0_V_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter6_assign_proc : process(p_Result_s_reg_6050_pp0_iter5_reg, io_acc_block_signal_op318)
    begin
                ap_block_state8_pp0_stage0_iter6 <= ((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (io_acc_block_signal_op318 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln53_fu_4661_p2)
    begin
        if ((icmp_ln53_fu_4661_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln53_fu_4661_p2, data_V_data_V_TVALID_int)
    begin
        if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_V_TDATA_blk_n <= data_V_data_V_TVALID_int;
        else 
            data_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_TREADY_assign_proc : process(data_V_data_V_TVALID, regslice_both_data_V_data_V_U_ack_in)
    begin
        if (((data_V_data_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln53_fu_4661_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln53_fu_4661_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_window_0_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_0_V_V_read <= ap_const_logic_1;
        else 
            data_window_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_0_V_V_write_assign_proc : process(trunc_ln14_reg_6014, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln14_reg_6014 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_0_V_V_write <= ap_const_logic_1;
        else 
            data_window_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_1_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_1_V_V_read <= ap_const_logic_1;
        else 
            data_window_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_1_V_V_write_assign_proc : process(tmp_16_reg_6018, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_reg_6018 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_1_V_V_write <= ap_const_logic_1;
        else 
            data_window_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_2_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_2_V_V_read <= ap_const_logic_1;
        else 
            data_window_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_2_V_V_write_assign_proc : process(tmp_17_reg_6022, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_reg_6022 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_2_V_V_write <= ap_const_logic_1;
        else 
            data_window_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_3_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_3_V_V_read <= ap_const_logic_1;
        else 
            data_window_3_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_3_V_V_write_assign_proc : process(tmp_18_reg_6026, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_18_reg_6026 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_3_V_V_write <= ap_const_logic_1;
        else 
            data_window_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_4_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_4_V_V_read <= ap_const_logic_1;
        else 
            data_window_4_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_4_V_V_write_assign_proc : process(tmp_19_reg_6030, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_19_reg_6030 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_4_V_V_write <= ap_const_logic_1;
        else 
            data_window_4_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_5_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_5_V_V_read <= ap_const_logic_1;
        else 
            data_window_5_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_5_V_V_write_assign_proc : process(tmp_20_reg_6034, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_20_reg_6034 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_5_V_V_write <= ap_const_logic_1;
        else 
            data_window_5_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_6_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_6_V_V_read <= ap_const_logic_1;
        else 
            data_window_6_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_6_V_V_write_assign_proc : process(tmp_21_reg_6038, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_21_reg_6038 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_6_V_V_write <= ap_const_logic_1;
        else 
            data_window_6_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_7_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_7_V_V_read <= ap_const_logic_1;
        else 
            data_window_7_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_7_V_V_write_assign_proc : process(tmp_22_reg_6042, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_22_reg_6042 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_7_V_V_write <= ap_const_logic_1;
        else 
            data_window_7_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_window_8_V_V_read_assign_proc : process(p_Result_s_reg_6050_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_window_8_V_V_read <= ap_const_logic_1;
        else 
            data_window_8_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_window_8_V_V_write_assign_proc : process(tmp_23_reg_6046, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_23_reg_6046 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            data_window_8_V_V_write <= ap_const_logic_1;
        else 
            data_window_8_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    i_iw_fu_4817_p2 <= std_logic_vector(unsigned(select_ln13_fu_4679_p3) + unsigned(ap_const_lv5_1));
    icmp_ln13_3_fu_4703_p2 <= "1" when (tmp_14_fu_4693_p4 = ap_const_lv4_0) else "0";
    icmp_ln13_4_fu_4777_p2 <= "1" when (tmp_15_fu_4767_p4 = ap_const_lv4_0) else "0";
    icmp_ln13_fu_4629_p2 <= "1" when (tmp_fu_4619_p4 = ap_const_lv4_0) else "0";
    icmp_ln24_3_fu_4789_p2 <= "1" when (unsigned(r_2_fu_4783_p2) < unsigned(ap_const_lv5_3)) else "0";
    icmp_ln24_4_fu_4715_p2 <= "1" when (unsigned(sub_ln23_4_fu_4709_p2) < unsigned(ap_const_lv5_3)) else "0";
    icmp_ln24_fu_4641_p2 <= "1" when (unsigned(r_fu_4635_p2) < unsigned(ap_const_lv5_3)) else "0";
    icmp_ln53_fu_4661_p2 <= "1" when (indvar_flatten_reg_623 = ap_const_lv10_384) else "0";
    icmp_ln54_fu_4673_p2 <= "1" when (wp_idx_reg_645 = ap_const_lv5_1E) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op318 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_2951_fu_685_p0 <= sext_ln1118_2546_fu_4983_p1(16 - 1 downto 0);
    mul_ln1118_2951_fu_685_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2951_fu_685_p0) * signed(ap_const_lv24_FFFEE3))), 24));
    mul_ln1118_2952_fu_672_p0 <= sext_ln1118_2546_fu_4983_p1(16 - 1 downto 0);
    mul_ln1118_2952_fu_672_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2952_fu_672_p0) * signed('0' &ap_const_lv24_92))), 24));
    mul_ln1118_2953_fu_686_p0 <= sext_ln1118_2549_fu_5050_p1(16 - 1 downto 0);
    mul_ln1118_2953_fu_686_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2953_fu_686_p0) * signed(ap_const_lv24_FFFF36))), 24));
    mul_ln1118_2954_fu_691_p0 <= sext_ln1118_2549_fu_5050_p1(16 - 1 downto 0);
    mul_ln1118_2954_fu_691_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2954_fu_691_p0) * signed('0' &ap_const_lv24_43))), 24));
    mul_ln1118_2955_fu_659_p0 <= tmp_V_193_reg_6070;
    mul_ln1118_2955_fu_659_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2955_fu_659_p0) * signed('0' &ap_const_lv23_3B))), 23));
    mul_ln1118_2956_fu_675_p0 <= sext_ln1118_2556_fu_5145_p1(16 - 1 downto 0);
    mul_ln1118_2956_fu_675_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2956_fu_675_p0) * signed(ap_const_lv24_FFFF3F))), 24));
    mul_ln1118_2957_fu_680_p0 <= sext_ln1118_2556_fu_5145_p1(16 - 1 downto 0);
    mul_ln1118_2957_fu_680_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2957_fu_680_p0) * signed('0' &ap_const_lv24_91))), 24));
    mul_ln1118_2958_fu_684_p0 <= sext_ln1118_2556_fu_5145_p1(16 - 1 downto 0);
    mul_ln1118_2958_fu_684_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2958_fu_684_p0) * signed('0' &ap_const_lv24_46))), 24));
    mul_ln1118_2959_fu_690_p0 <= sext_ln1118_2558_fu_5195_p1(16 - 1 downto 0);
    mul_ln1118_2959_fu_690_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2959_fu_690_p0) * signed(ap_const_lv24_FFFED9))), 24));
    mul_ln1118_2960_fu_663_p0 <= sext_ln1118_2558_fu_5195_p1(16 - 1 downto 0);
    mul_ln1118_2960_fu_663_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2960_fu_663_p0) * signed(ap_const_lv24_FFFECE))), 24));
    mul_ln1118_2961_fu_660_p0 <= sext_ln1118_2558_fu_5195_p1(16 - 1 downto 0);
    mul_ln1118_2961_fu_660_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2961_fu_660_p0) * signed('0' &ap_const_lv24_68))), 24));
    mul_ln1118_2962_fu_661_p0 <= sext_ln1118_2558_fu_5195_p1(16 - 1 downto 0);
    mul_ln1118_2962_fu_661_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2962_fu_661_p0) * signed('0' &ap_const_lv24_91))), 24));
    mul_ln1118_2963_fu_656_p0 <= sext_ln1118_2559_fu_5242_p1(16 - 1 downto 0);
    mul_ln1118_2963_fu_656_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2963_fu_656_p0) * signed('0' &ap_const_lv24_57))), 24));
    mul_ln1118_2964_fu_668_p0 <= sext_ln1118_2559_fu_5242_p1(16 - 1 downto 0);
    mul_ln1118_2964_fu_668_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2964_fu_668_p0) * signed(ap_const_lv24_FFFF58))), 24));
    mul_ln1118_2965_fu_679_p0 <= sext_ln1118_2559_fu_5242_p1(16 - 1 downto 0);
    mul_ln1118_2965_fu_679_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2965_fu_679_p0) * signed('0' &ap_const_lv24_7A))), 24));
    mul_ln1118_2966_fu_657_p0 <= sext_ln1118_2564_fu_5324_p1(16 - 1 downto 0);
    mul_ln1118_2966_fu_657_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2966_fu_657_p0) * signed('0' &ap_const_lv24_5B))), 24));
    mul_ln1118_2967_fu_687_p0 <= tmp_V_196_reg_6088;
    mul_ln1118_2967_fu_687_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2967_fu_687_p0) * signed('0' &ap_const_lv23_2B))), 23));
    mul_ln1118_2968_fu_689_p0 <= sext_ln1118_2564_fu_5324_p1(16 - 1 downto 0);
    mul_ln1118_2968_fu_689_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2968_fu_689_p0) * signed('0' &ap_const_lv24_56))), 24));
    mul_ln1118_2969_fu_683_p0 <= sext_ln1118_2568_fu_5398_p1(16 - 1 downto 0);
    mul_ln1118_2969_fu_683_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2969_fu_683_p0) * signed(ap_const_lv24_FFFF43))), 24));
    mul_ln1118_2970_fu_665_p0 <= tmp_V_197_reg_6095;
    mul_ln1118_2970_fu_665_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2970_fu_665_p0) * signed(ap_const_lv23_7FFFDD))), 23));
    mul_ln1118_2971_fu_669_p0 <= sext_ln1118_2568_fu_5398_p1(16 - 1 downto 0);
    mul_ln1118_2971_fu_669_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2971_fu_669_p0) * signed('0' &ap_const_lv24_46))), 24));
    mul_ln1118_2972_fu_673_p0 <= tmp_V_198_reg_6103;
    mul_ln1118_2972_fu_673_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2972_fu_673_p0) * signed(ap_const_lv24_FFFF48))), 24));
    mul_ln1118_2973_fu_681_p0 <= sext_ln1118_2579_fu_5556_p1(16 - 1 downto 0);
    mul_ln1118_2973_fu_681_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2973_fu_681_p0) * signed(ap_const_lv24_FFFDE7))), 24));
    mul_ln1118_2974_fu_666_p0 <= sext_ln1118_2579_fu_5556_p1(16 - 1 downto 0);
    mul_ln1118_2974_fu_666_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2974_fu_666_p0) * signed('0' &ap_const_lv24_57))), 24));
    mul_ln1118_2975_fu_678_p0 <= sext_ln1118_2579_fu_5556_p1(16 - 1 downto 0);
    mul_ln1118_2975_fu_678_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2975_fu_678_p0) * signed(ap_const_lv24_FFFF8B))), 24));
    mul_ln1118_fu_674_p0 <= sext_ln1118_2546_fu_4983_p1(16 - 1 downto 0);
    mul_ln1118_fu_674_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_674_p0) * signed(ap_const_lv24_FFFF26))), 24));
    p_Val2_32_fu_5781_p2 <= std_logic_vector(unsigned(add_ln703_4397_fu_5755_p2) + unsigned(add_ln703_4401_fu_5776_p2));
    p_Val2_s_fu_4838_p26 <= std_logic_vector(unsigned(add_ln321_2_fu_4828_p2) + unsigned(select_ln13_5_reg_5980));
    r_2_fu_4783_p2 <= std_logic_vector(signed(ap_const_lv5_1E) - signed(select_ln13_fu_4679_p3));
    r_fu_4635_p2 <= std_logic_vector(signed(ap_const_lv5_1E) - signed(h_idx_assign_reg_634));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_0_V_fu_5869_p3 <= (p_Val2_32_reg_6233 & ap_const_lv4_0);
    res_1_V_fu_5881_p3 <= (acc_1_V_reg_6238 & ap_const_lv4_0);
    res_2_V_fu_5893_p3 <= (acc_2_V_reg_6243 & ap_const_lv4_0);

    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_0_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(res_0_V_fu_5869_p3),16));


    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_1_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(res_1_V_fu_5881_p3),16));


    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_2_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(res_2_V_fu_5893_p3),16));


    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_3_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_fu_5905_p3),16));


    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, p_Result_s_reg_6050_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((p_Result_s_reg_6050_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln13_1_fu_4809_p3 <= 
        select_ln13_fu_4679_p3 when (icmp_ln13_4_fu_4777_p2(0) = '1') else 
        select_ln23_1_fu_4801_p3;
    select_ln13_3_fu_4735_p3 <= 
        add_ln53_2_fu_4687_p2 when (icmp_ln13_3_fu_4703_p2(0) = '1') else 
        select_ln23_2_fu_4727_p3;
    select_ln13_4_fu_4743_p3 <= 
        h_idx_assign_reg_634 when (icmp_ln13_fu_4629_p2(0) = '1') else 
        select_ln23_fu_4653_p3;
    select_ln13_5_fu_4751_p3 <= 
        select_ln13_3_fu_4735_p3 when (icmp_ln54_fu_4673_p2(0) = '1') else 
        select_ln13_4_fu_4743_p3;
    select_ln13_fu_4679_p3 <= 
        ap_const_lv5_0 when (icmp_ln54_fu_4673_p2(0) = '1') else 
        wp_idx_reg_645;
    select_ln23_1_fu_4801_p3 <= 
        sub_ln23_2_fu_4795_p2 when (icmp_ln24_3_fu_4789_p2(0) = '1') else 
        ap_const_lv5_2;
    select_ln23_2_fu_4727_p3 <= 
        sub_ln23_5_fu_4721_p2 when (icmp_ln24_4_fu_4715_p2(0) = '1') else 
        ap_const_lv5_2;
    select_ln23_fu_4653_p3 <= 
        sub_ln23_fu_4647_p2 when (icmp_ln24_fu_4641_p2(0) = '1') else 
        ap_const_lv5_2;
    select_ln53_fu_4759_p3 <= 
        add_ln53_2_fu_4687_p2 when (icmp_ln54_fu_4673_p2(0) = '1') else 
        h_idx_assign_reg_634;
        sext_ln1118_2546_fu_4983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_191_reg_6054),24));

        sext_ln1118_2547_fu_5016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_5009_p3),19));

        sext_ln1118_2548_fu_5036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2113_fu_5026_p4),7));

        sext_ln1118_2549_fu_5050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_192_reg_6061),24));

        sext_ln1118_2550_fu_5055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_192_reg_6061),21));

        sext_ln1118_2551_fu_5058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_192_reg_6061),19));

        sext_ln1118_2552_fu_5068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_5061_p3),21));

        sext_ln1118_2553_fu_5739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2115_reg_6123),8));

        sext_ln1118_2554_fu_5105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_5098_p3),19));

        sext_ln1118_2555_fu_5131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2117_fu_5121_p4),6));

        sext_ln1118_2556_fu_5145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_193_reg_6070),24));

        sext_ln1118_2558_fu_5195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_194_reg_6076),24));

        sext_ln1118_2559_fu_5242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_195_reg_6081),24));

        sext_ln1118_2560_fu_5285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_5278_p3),20));

        sext_ln1118_2561_fu_5296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1235_fu_5289_p3),20));

        sext_ln1118_2562_fu_5316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2130_fu_5306_p4),7));

        sext_ln1118_2564_fu_5324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_196_reg_6088),24));

        sext_ln1118_2565_fu_5370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1236_fu_5363_p3),18));

        sext_ln1118_2566_fu_5390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2134_fu_5380_p4),5));

        sext_ln1118_2568_fu_5398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_197_reg_6095),24));

        sext_ln1118_2569_fu_5403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_197_reg_6095),22));

        sext_ln1118_2570_fu_5443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1237_fu_5436_p3),22));

        sext_ln1118_2571_fu_5463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2138_fu_5453_p4),9));

        sext_ln1118_2573_fu_5471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_198_reg_6103),21));

        sext_ln1118_2574_fu_5491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1238_fu_5484_p3),22));

        sext_ln1118_2575_fu_5502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1239_fu_5495_p3),22));

        sext_ln1118_2576_fu_5522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2141_reg_6118),6));

        sext_ln1118_2577_fu_5532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_53_fu_5525_p3),21));

        sext_ln1118_2578_fu_5552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2142_fu_5542_p4),9));

        sext_ln1118_2579_fu_5556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_199_reg_6112),24));

        sext_ln1118_2580_fu_5589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1240_fu_5582_p3),20));

        sext_ln1118_2581_fu_5609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2145_fu_5599_p4),8));

        sext_ln1118_fu_4980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_191_reg_6054),19));

        sext_ln703_697_fu_5802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4408_fu_5796_p2),10));

        sext_ln703_698_fu_5671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4416_fu_5665_p2),9));

        sext_ln703_699_fu_5681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4417_fu_5675_p2),7));

        sext_ln703_700_fu_5691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4418_fu_5685_p2),9));

        sext_ln703_701_fu_5837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4419_reg_6218),10));

        sext_ln703_702_fu_5729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4427_fu_5723_p2),9));

        sext_ln703_703_fu_5860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4428_reg_6228),10));

        sext_ln703_fu_5766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_4399_fu_5760_p2),10));

        sext_ln708_1043_fu_5349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2132_fu_5339_p4),10));

        sext_ln708_1044_fu_5745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2136_reg_6163),10));

        sext_ln708_1045_fu_5748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2140_reg_6173),9));

        sext_ln708_fu_5742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2119_reg_6128),10));

    shl_ln1118_1235_fu_5289_p3 <= (tmp_V_195_reg_6081 & ap_const_lv1_0);
    shl_ln1118_1236_fu_5363_p3 <= (tmp_V_196_reg_6088 & ap_const_lv1_0);
    shl_ln1118_1237_fu_5436_p3 <= (tmp_V_197_reg_6095 & ap_const_lv5_0);
    shl_ln1118_1238_fu_5484_p3 <= (tmp_V_198_reg_6103 & ap_const_lv5_0);
    shl_ln1118_1239_fu_5495_p3 <= (tmp_V_198_reg_6103 & ap_const_lv3_0);
    shl_ln1118_1240_fu_5582_p3 <= (tmp_V_199_reg_6112 & ap_const_lv3_0);
    shl_ln1118_s_fu_5278_p3 <= (tmp_V_195_reg_6081 & ap_const_lv3_0);
    shl_ln13_fu_4823_p2 <= std_logic_vector(shift_left(unsigned(select_ln13_5_reg_5980),to_integer(unsigned('0' & ap_const_lv5_2(5-1 downto 0)))));
    shl_ln_fu_5098_p3 <= (tmp_V_192_reg_6061 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_1243_fu_5020_p2 <= std_logic_vector(signed(sext_ln1118_fu_4980_p1) - signed(sext_ln1118_2547_fu_5016_p1));
    sub_ln1118_1244_fu_5072_p2 <= std_logic_vector(signed(sext_ln1118_2550_fu_5055_p1) - signed(sext_ln1118_2552_fu_5068_p1));
    sub_ln1118_1245_fu_5115_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_5109_p2) - unsigned(sext_ln1118_2551_fu_5058_p1));
    sub_ln1118_1246_fu_5374_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(sext_ln1118_2565_fu_5370_p1));
    sub_ln1118_1247_fu_5447_p2 <= std_logic_vector(signed(sext_ln1118_2570_fu_5443_p1) - signed(sext_ln1118_2569_fu_5403_p1));
    sub_ln1118_1248_fu_5506_p2 <= std_logic_vector(signed(sext_ln1118_2575_fu_5502_p1) - signed(sext_ln1118_2574_fu_5491_p1));
    sub_ln1118_1249_fu_5536_p2 <= std_logic_vector(signed(sext_ln1118_2573_fu_5471_p1) - signed(sext_ln1118_2577_fu_5532_p1));
    sub_ln1118_1250_fu_5593_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(sext_ln1118_2580_fu_5589_p1));
    sub_ln1118_fu_5109_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln1118_2554_fu_5105_p1));
    sub_ln23_2_fu_4795_p2 <= std_logic_vector(unsigned(ap_const_lv5_5) - unsigned(r_2_fu_4783_p2));
    sub_ln23_4_fu_4709_p2 <= std_logic_vector(signed(ap_const_lv5_1D) - signed(h_idx_assign_reg_634));
    sub_ln23_5_fu_4721_p2 <= std_logic_vector(unsigned(ap_const_lv5_5) - unsigned(sub_ln23_4_fu_4709_p2));
    sub_ln23_fu_4647_p2 <= std_logic_vector(unsigned(ap_const_lv5_5) - unsigned(r_fu_4635_p2));
    tmp_14_fu_4693_p4 <= add_ln53_2_fu_4687_p2(4 downto 1);
    tmp_15_fu_4767_p4 <= select_ln13_fu_4679_p3(4 downto 1);
    tmp_51_fu_5009_p3 <= (tmp_V_191_reg_6054 & ap_const_lv2_0);
    tmp_52_fu_5061_p3 <= (tmp_V_192_reg_6061 & ap_const_lv4_0);
    tmp_53_fu_5525_p3 <= (tmp_V_198_reg_6103 & ap_const_lv4_0);
    tmp_data_3_V_fu_5905_p3 <= (acc_3_V_reg_6248 & ap_const_lv4_0);
    tmp_fu_4619_p4 <= h_idx_assign_reg_634(4 downto 1);
    trunc_ln14_fu_4894_p1 <= p_Val2_s_fu_4838_p27(1 - 1 downto 0);
    trunc_ln2_fu_4989_p4 <= mul_ln1118_fu_674_p2(23 downto 14);
    trunc_ln708_2113_fu_5026_p4 <= sub_ln1118_1243_fu_5020_p2(18 downto 14);
    trunc_ln708_2114_fu_5040_p4 <= mul_ln1118_2952_fu_672_p2(23 downto 14);
    trunc_ln708_2116_fu_5088_p4 <= mul_ln1118_2953_fu_686_p2(23 downto 14);
    trunc_ln708_2117_fu_5121_p4 <= sub_ln1118_1245_fu_5115_p2(18 downto 14);
    trunc_ln708_2118_fu_5135_p4 <= mul_ln1118_2954_fu_691_p2(23 downto 14);
    trunc_ln708_2121_fu_5175_p4 <= mul_ln1118_2957_fu_680_p2(23 downto 14);
    trunc_ln708_2123_fu_5202_p4 <= mul_ln1118_2959_fu_690_p2(23 downto 14);
    trunc_ln708_2124_fu_5212_p4 <= mul_ln1118_2960_fu_663_p2(23 downto 14);
    trunc_ln708_2125_fu_5222_p4 <= mul_ln1118_2961_fu_660_p2(23 downto 14);
    trunc_ln708_2128_fu_5258_p4 <= mul_ln1118_2964_fu_668_p2(23 downto 14);
    trunc_ln708_2130_fu_5306_p4 <= add_ln1118_fu_5300_p2(19 downto 14);
    trunc_ln708_2131_fu_5329_p4 <= mul_ln1118_2966_fu_657_p2(23 downto 14);
    trunc_ln708_2132_fu_5339_p4 <= mul_ln1118_2967_fu_687_p2(22 downto 14);
    trunc_ln708_2134_fu_5380_p4 <= sub_ln1118_1246_fu_5374_p2(17 downto 14);
    trunc_ln708_2135_fu_5406_p4 <= mul_ln1118_2969_fu_683_p2(23 downto 14);
    trunc_ln708_2138_fu_5453_p4 <= sub_ln1118_1247_fu_5447_p2(21 downto 14);
    trunc_ln708_2139_fu_5474_p4 <= mul_ln1118_2972_fu_673_p2(23 downto 14);
    trunc_ln708_2141_fu_4970_p1 <= data_window_7_V_V_dout;
    trunc_ln708_2142_fu_5542_p4 <= sub_ln1118_1249_fu_5536_p2(20 downto 14);
    trunc_ln708_2143_fu_5562_p4 <= mul_ln1118_2973_fu_681_p2(23 downto 14);
    trunc_ln708_2144_fu_5572_p4 <= mul_ln1118_2974_fu_666_p2(23 downto 14);
    trunc_ln708_2145_fu_5599_p4 <= sub_ln1118_1250_fu_5593_p2(19 downto 14);
    trunc_ln708_s_fu_4999_p4 <= mul_ln1118_2951_fu_685_p2(23 downto 14);
    zext_ln703_fu_5719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_4426_fu_5713_p2),7));
end behav;
