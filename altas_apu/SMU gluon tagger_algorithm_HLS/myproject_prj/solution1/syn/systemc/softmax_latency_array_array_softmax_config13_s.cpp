// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_latency_array_array_softmax_config13_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_latency_array_array_softmax_config13_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_latency_array_array_softmax_config13_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> softmax_latency_array_array_softmax_config13_s::ap_ST_fsm_pp0_stage0 = "1";
const bool softmax_latency_array_array_softmax_config13_s::ap_const_boolean_1 = true;
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool softmax_latency_array_array_softmax_config13_s::ap_const_boolean_0 = false;
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_6 = "110";
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_F = "1111";
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_8 = "1000";
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_11 = "10001";
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_A = "1010";
const sc_lv<32> softmax_latency_array_array_softmax_config13_s::ap_const_lv32_19 = "11001";

softmax_latency_array_array_softmax_config13_s::softmax_latency_array_array_softmax_config13_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    exp_table11_U = new softmax_latency_array_array_softmax_config13_s_exp_table11("exp_table11_U");
    exp_table11_U->clk(ap_clk);
    exp_table11_U->reset(ap_rst);
    exp_table11_U->address0(exp_table11_address0);
    exp_table11_U->ce0(exp_table11_ce0);
    exp_table11_U->q0(exp_table11_q0);
    exp_table11_U->address1(exp_table11_address1);
    exp_table11_U->ce1(exp_table11_ce1);
    exp_table11_U->q1(exp_table11_q1);
    invert_table12_U = new softmax_latency_array_array_softmax_config13_s_invert_tabfYi("invert_table12_U");
    invert_table12_U->clk(ap_clk);
    invert_table12_U->reset(ap_rst);
    invert_table12_U->address0(invert_table12_address0);
    invert_table12_U->ce0(invert_table12_ce0);
    invert_table12_U->q0(invert_table12_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( io_acc_block_signal_op7 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( res_V_data_0_V_TREADY );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( res_V_data_0_V_TREADY );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( io_acc_block_signal_op7 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_idle_pp0_0to4);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to4 );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_V_data_0_V_empty_n );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_V_data_1_V_empty_n );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_sum_V_fu_215_p2);
    sensitive << ( exp_res_0_V_reg_289 );
    sensitive << ( exp_res_1_V_reg_295 );

    SC_METHOD(thread_exp_table11_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln157_fu_207_p1 );

    SC_METHOD(thread_exp_table11_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln157_1_fu_211_p1 );

    SC_METHOD(thread_exp_table11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table11_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_invert_table12_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( zext_ln166_fu_229_p1 );

    SC_METHOD(thread_invert_table12_ce0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_io_acc_block_signal_op7);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );

    SC_METHOD(thread_mul_ln1118_1_fu_153_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( exp_res_1_V_reg_295_pp0_iter4_reg );

    SC_METHOD(thread_mul_ln1118_1_fu_153_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( sext_ln167_fu_234_p1 );

    SC_METHOD(thread_mul_ln1118_1_fu_153_p2);
    sensitive << ( mul_ln1118_1_fu_153_p0 );
    sensitive << ( mul_ln1118_1_fu_153_p1 );

    SC_METHOD(thread_mul_ln1118_fu_152_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( exp_res_0_V_reg_289_pp0_iter4_reg );

    SC_METHOD(thread_mul_ln1118_fu_152_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( sext_ln167_fu_234_p1 );

    SC_METHOD(thread_mul_ln1118_fu_152_p2);
    sensitive << ( mul_ln1118_fu_152_p0 );
    sensitive << ( mul_ln1118_fu_152_p1 );

    SC_METHOD(thread_res_V_data_0_V_TDATA);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( mul_ln1118_fu_152_p2 );

    SC_METHOD(thread_res_V_data_0_V_TDATA_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( res_V_data_0_V_TREADY );

    SC_METHOD(thread_res_V_data_0_V_TVALID);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_TDATA);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( mul_ln1118_1_fu_153_p2 );

    SC_METHOD(thread_res_V_data_1_V_TDATA_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( res_V_data_1_V_TREADY );

    SC_METHOD(thread_res_V_data_1_V_TVALID);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sext_ln167_fu_234_p1);
    sensitive << ( inv_exp_sum_V_reg_306 );

    SC_METHOD(thread_y_V_2_fu_219_p4);
    sensitive << ( exp_sum_V_fu_215_p2 );

    SC_METHOD(thread_zext_ln157_1_fu_211_p1);
    sensitive << ( y_V_1_reg_274 );

    SC_METHOD(thread_zext_ln157_fu_207_p1);
    sensitive << ( y_V_reg_269 );

    SC_METHOD(thread_zext_ln166_fu_229_p1);
    sensitive << ( y_V_2_fu_219_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_latency_array_array_softmax_config13_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_TREADY, "(port)res_V_data_0_V_TREADY");
    sc_trace(mVcdFile, res_V_data_0_V_TDATA, "(port)res_V_data_0_V_TDATA");
    sc_trace(mVcdFile, res_V_data_0_V_TVALID, "(port)res_V_data_0_V_TVALID");
    sc_trace(mVcdFile, res_V_data_1_V_TDATA, "(port)res_V_data_1_V_TDATA");
    sc_trace(mVcdFile, res_V_data_1_V_TVALID, "(port)res_V_data_1_V_TVALID");
    sc_trace(mVcdFile, res_V_data_1_V_TREADY, "(port)res_V_data_1_V_TREADY");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "(port)data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "(port)data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_TDATA_blk_n, "(port)res_V_data_0_V_TDATA_blk_n");
    sc_trace(mVcdFile, res_V_data_1_V_TDATA_blk_n, "(port)res_V_data_1_V_TDATA_blk_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op7, "io_acc_block_signal_op7");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exp_table11_address0, "exp_table11_address0");
    sc_trace(mVcdFile, exp_table11_ce0, "exp_table11_ce0");
    sc_trace(mVcdFile, exp_table11_q0, "exp_table11_q0");
    sc_trace(mVcdFile, exp_table11_address1, "exp_table11_address1");
    sc_trace(mVcdFile, exp_table11_ce1, "exp_table11_ce1");
    sc_trace(mVcdFile, exp_table11_q1, "exp_table11_q1");
    sc_trace(mVcdFile, invert_table12_address0, "invert_table12_address0");
    sc_trace(mVcdFile, invert_table12_ce0, "invert_table12_ce0");
    sc_trace(mVcdFile, invert_table12_q0, "invert_table12_q0");
    sc_trace(mVcdFile, y_V_reg_269, "y_V_reg_269");
    sc_trace(mVcdFile, y_V_1_reg_274, "y_V_1_reg_274");
    sc_trace(mVcdFile, exp_res_0_V_reg_289, "exp_res_0_V_reg_289");
    sc_trace(mVcdFile, exp_res_0_V_reg_289_pp0_iter3_reg, "exp_res_0_V_reg_289_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_289_pp0_iter4_reg, "exp_res_0_V_reg_289_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_295, "exp_res_1_V_reg_295");
    sc_trace(mVcdFile, exp_res_1_V_reg_295_pp0_iter3_reg, "exp_res_1_V_reg_295_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_295_pp0_iter4_reg, "exp_res_1_V_reg_295_pp0_iter4_reg");
    sc_trace(mVcdFile, inv_exp_sum_V_reg_306, "inv_exp_sum_V_reg_306");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln157_fu_207_p1, "zext_ln157_fu_207_p1");
    sc_trace(mVcdFile, zext_ln157_1_fu_211_p1, "zext_ln157_1_fu_211_p1");
    sc_trace(mVcdFile, zext_ln166_fu_229_p1, "zext_ln166_fu_229_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, mul_ln1118_fu_152_p0, "mul_ln1118_fu_152_p0");
    sc_trace(mVcdFile, mul_ln1118_fu_152_p1, "mul_ln1118_fu_152_p1");
    sc_trace(mVcdFile, sext_ln167_fu_234_p1, "sext_ln167_fu_234_p1");
    sc_trace(mVcdFile, mul_ln1118_1_fu_153_p0, "mul_ln1118_1_fu_153_p0");
    sc_trace(mVcdFile, mul_ln1118_1_fu_153_p1, "mul_ln1118_1_fu_153_p1");
    sc_trace(mVcdFile, exp_sum_V_fu_215_p2, "exp_sum_V_fu_215_p2");
    sc_trace(mVcdFile, y_V_2_fu_219_p4, "y_V_2_fu_219_p4");
    sc_trace(mVcdFile, mul_ln1118_fu_152_p2, "mul_ln1118_fu_152_p2");
    sc_trace(mVcdFile, mul_ln1118_1_fu_153_p2, "mul_ln1118_1_fu_153_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to4, "ap_idle_pp0_0to4");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

softmax_latency_array_array_softmax_config13_s::~softmax_latency_array_array_softmax_config13_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete exp_table11_U;
    delete invert_table12_U;
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        exp_res_0_V_reg_289 = exp_table11_q0.read();
        exp_res_1_V_reg_295 = exp_table11_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exp_res_0_V_reg_289_pp0_iter3_reg = exp_res_0_V_reg_289.read();
        exp_res_0_V_reg_289_pp0_iter4_reg = exp_res_0_V_reg_289_pp0_iter3_reg.read();
        exp_res_1_V_reg_295_pp0_iter3_reg = exp_res_1_V_reg_295.read();
        exp_res_1_V_reg_295_pp0_iter4_reg = exp_res_1_V_reg_295_pp0_iter3_reg.read();
        inv_exp_sum_V_reg_306 = invert_table12_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        y_V_1_reg_274 = data_V_data_1_V_dout.read().range(15, 6);
        y_V_reg_269 = data_V_data_0_V_dout.read().range(15, 6);
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read())));
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_0_V_TREADY.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())));
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_0_V_TREADY.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())));
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()));
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_idle_pp0_0to4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0_0to4 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to4 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to4.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_exp_sum_V_fu_215_p2() {
    exp_sum_V_fu_215_p2 = (!exp_res_0_V_reg_289.read().is_01() || !exp_res_1_V_reg_295.read().is_01())? sc_lv<18>(): (sc_bigint<18>(exp_res_0_V_reg_289.read()) + sc_bigint<18>(exp_res_1_V_reg_295.read()));
}

void softmax_latency_array_array_softmax_config13_s::thread_exp_table11_address0() {
    exp_table11_address0 =  (sc_lv<10>) (zext_ln157_fu_207_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_exp_table11_address1() {
    exp_table11_address1 =  (sc_lv<10>) (zext_ln157_1_fu_211_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_exp_table11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table11_ce0 = ap_const_logic_1;
    } else {
        exp_table11_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_exp_table11_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table11_ce1 = ap_const_logic_1;
    } else {
        exp_table11_ce1 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_invert_table12_address0() {
    invert_table12_address0 =  (sc_lv<10>) (zext_ln166_fu_229_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_invert_table12_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        invert_table12_ce0 = ap_const_logic_1;
    } else {
        invert_table12_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_io_acc_block_signal_op7() {
    io_acc_block_signal_op7 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_1_fu_153_p0() {
    mul_ln1118_1_fu_153_p0 = exp_res_1_V_reg_295_pp0_iter4_reg.read();
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_1_fu_153_p1() {
    mul_ln1118_1_fu_153_p1 =  (sc_lv<14>) (sext_ln167_fu_234_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_1_fu_153_p2() {
    mul_ln1118_1_fu_153_p2 = (!mul_ln1118_1_fu_153_p0.read().is_01() || !mul_ln1118_1_fu_153_p1.read().is_01())? sc_lv<26>(): sc_bigint<18>(mul_ln1118_1_fu_153_p0.read()) * sc_bigint<14>(mul_ln1118_1_fu_153_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_fu_152_p0() {
    mul_ln1118_fu_152_p0 = exp_res_0_V_reg_289_pp0_iter4_reg.read();
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_fu_152_p1() {
    mul_ln1118_fu_152_p1 =  (sc_lv<14>) (sext_ln167_fu_234_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_mul_ln1118_fu_152_p2() {
    mul_ln1118_fu_152_p2 = (!mul_ln1118_fu_152_p0.read().is_01() || !mul_ln1118_fu_152_p1.read().is_01())? sc_lv<26>(): sc_bigint<18>(mul_ln1118_fu_152_p0.read()) * sc_bigint<14>(mul_ln1118_fu_152_p1.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_0_V_TDATA() {
    res_V_data_0_V_TDATA = mul_ln1118_fu_152_p2.read().range(25, 10);
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_0_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        res_V_data_0_V_TDATA_blk_n = res_V_data_0_V_TREADY.read();
    } else {
        res_V_data_0_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_0_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_TVALID = ap_const_logic_1;
    } else {
        res_V_data_0_V_TVALID = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_1_V_TDATA() {
    res_V_data_1_V_TDATA = mul_ln1118_1_fu_153_p2.read().range(25, 10);
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_1_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        res_V_data_1_V_TDATA_blk_n = res_V_data_1_V_TREADY.read();
    } else {
        res_V_data_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_res_V_data_1_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_TVALID = ap_const_logic_1;
    } else {
        res_V_data_1_V_TVALID = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config13_s::thread_sext_ln167_fu_234_p1() {
    sext_ln167_fu_234_p1 = esl_sext<26,14>(inv_exp_sum_V_reg_306.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_y_V_2_fu_219_p4() {
    y_V_2_fu_219_p4 = exp_sum_V_fu_215_p2.read().range(17, 8);
}

void softmax_latency_array_array_softmax_config13_s::thread_zext_ln157_1_fu_211_p1() {
    zext_ln157_1_fu_211_p1 = esl_zext<64,10>(y_V_1_reg_274.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_zext_ln157_fu_207_p1() {
    zext_ln157_fu_207_p1 = esl_zext<64,10>(y_V_reg_269.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_zext_ln166_fu_229_p1() {
    zext_ln166_fu_229_p1 = esl_zext<64,10>(y_V_2_fu_219_p4.read());
}

void softmax_latency_array_array_softmax_config13_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

